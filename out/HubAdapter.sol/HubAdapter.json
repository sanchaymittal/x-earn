{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IConnext",
          "name": "_connext",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "connext",
      "outputs": [
        {
          "internalType": "contract IConnext",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "destinationDomain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "newGreeting",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "relayerFee",
          "type": "uint256"
        }
      ],
      "name": "updateGreeting",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "destinationDomain",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "adaptor",
              "type": "address"
            },
            {
              "internalType": "bytes[]",
              "name": "callData",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct HubAdapter.AdaptorCall[]",
          "name": "data",
          "type": "tuple[]"
        }
      ],
      "name": "xCallTargetAdapter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610a65380380610a6583398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516109cd6100986000396000818160730152818161013c01526102bc01526109cd6000f3fe6080604052600436106100345760003560e01c8063367b98101461003957806348c569031461004e578063de4b054814610061575b600080fd5b61004c6100473660046104a4565b6100be565b005b61004c61005c366004610542565b6101cc565b34801561006d57600080fd5b506100957f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000826040516020016100d191906107f5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f8aac16ba000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638aac16ba9084906101819088908a9060009033908290601e908b9060040161080f565b60206040518083038185885af115801561019f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101c49190610875565b505050505050565b60007f6b983df01756c6049e85ecef6b0808d165eeb1606579127bbd16f8164474879582604051602401610200919061088e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290517f8aac16ba00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638aac16ba906102fe90899087908a906000908b9082908a9060040161080f565b6020604051808303816000875af115801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610875565b50505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461036e57600080fd5b919050565b803563ffffffff8116811461036e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156103d9576103d9610387565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561042657610426610387565b604052919050565b600067ffffffffffffffff83111561044857610448610387565b61047960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016103df565b905082815283838301111561048d57600080fd5b828260208301376000602084830101529392505050565b600080600080608085870312156104ba57600080fd5b6104c38561034a565b93506104d160208601610373565b9250604085013567ffffffffffffffff8111156104ed57600080fd5b8501601f810187136104fe57600080fd5b61050d8782356020840161042e565b949793965093946060013593505050565b600067ffffffffffffffff82111561053857610538610387565b5060051b60200190565b600080600080600060a0868803121561055a57600080fd5b61056386610373565b94506105716020870161034a565b9350604086013592506105866060870161034a565b915067ffffffffffffffff608087013511156105a157600080fd5b86601f6080880135880101126105b657600080fd5b6105ce6105c9608088013588013561051e565b6103df565b6080870135870180358083526020808401939260059290921b909101018910156105f757600080fd5b602060808901358901015b60808901358901803560051b0160200181101561077a5767ffffffffffffffff8135111561062f57600080fd5b60407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0823560808c01358c01018c0301121561066a57600080fd5b6106726103b6565b6106876020833560808d01358d01010161034a565b815267ffffffffffffffff6040833560808d01358d0101013511156106ab57600080fd5b60808a01358a01823501604081013501603f81018c136106ca57600080fd5b6106da6105c9602083013561051e565b602082810135808352908201919060051b83016040018e10156106fc57600080fd5b604083015b6040602085013560051b8501018110156107615767ffffffffffffffff8135111561072b57600080fd5b8e605f82358601011261073d57600080fd5b6107538f8235860160408101359060600161042e565b835260209283019201610701565b5060208481019190915292865250509283019201610602565b5080925050509295509295909350565b6000815180845260005b818110156107b057602081850181015186830182015201610794565b818111156107c2576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610808602083018461078a565b9392505050565b63ffffffff88168152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401528087166060840152508460808301528360a083015260e060c083015261086860e083018461078a565b9998505050505050505050565b60006020828403121561088757600080fd5b5051919050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610987577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610971577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa089850301835261095f84865161078a565b948e01949350918d0191600101610925565b505050978a0197945050918801916001016108b5565b50919a995050505050505050505056fea264697066735822122052c7cebdfe6ac637256402c375f45196fb00a37106315f79f7197ccdf42794d464736f6c634300080f0033",
    "sourceMap": "183:3574:29:-:0;;;851:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;892:18:29;;;183:3574;;14:308:30;102:6;155:2;143:9;134:7;130:23;126:32;123:52;;;171:1;168;161:12;123:52;197:16;;-1:-1:-1;;;;;242:31:30;;232:42;;222:70;;288:1;285;278:12;222:70;311:5;14:308;-1:-1:-1;;;14:308:30:o;:::-;183:3574:29;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100345760003560e01c8063367b98101461003957806348c569031461004e578063de4b054814610061575b600080fd5b61004c6100473660046104a4565b6100be565b005b61004c61005c366004610542565b6101cc565b34801561006d57600080fd5b506100957f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000826040516020016100d191906107f5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f8aac16ba000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638aac16ba9084906101819088908a9060009033908290601e908b9060040161080f565b60206040518083038185885af115801561019f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101c49190610875565b505050505050565b60007f6b983df01756c6049e85ecef6b0808d165eeb1606579127bbd16f8164474879582604051602401610200919061088e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290517f8aac16ba00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638aac16ba906102fe90899087908a906000908b9082908a9060040161080f565b6020604051808303816000875af115801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610875565b50505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461036e57600080fd5b919050565b803563ffffffff8116811461036e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156103d9576103d9610387565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561042657610426610387565b604052919050565b600067ffffffffffffffff83111561044857610448610387565b61047960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016103df565b905082815283838301111561048d57600080fd5b828260208301376000602084830101529392505050565b600080600080608085870312156104ba57600080fd5b6104c38561034a565b93506104d160208601610373565b9250604085013567ffffffffffffffff8111156104ed57600080fd5b8501601f810187136104fe57600080fd5b61050d8782356020840161042e565b949793965093946060013593505050565b600067ffffffffffffffff82111561053857610538610387565b5060051b60200190565b600080600080600060a0868803121561055a57600080fd5b61056386610373565b94506105716020870161034a565b9350604086013592506105866060870161034a565b915067ffffffffffffffff608087013511156105a157600080fd5b86601f6080880135880101126105b657600080fd5b6105ce6105c9608088013588013561051e565b6103df565b6080870135870180358083526020808401939260059290921b909101018910156105f757600080fd5b602060808901358901015b60808901358901803560051b0160200181101561077a5767ffffffffffffffff8135111561062f57600080fd5b60407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0823560808c01358c01018c0301121561066a57600080fd5b6106726103b6565b6106876020833560808d01358d01010161034a565b815267ffffffffffffffff6040833560808d01358d0101013511156106ab57600080fd5b60808a01358a01823501604081013501603f81018c136106ca57600080fd5b6106da6105c9602083013561051e565b602082810135808352908201919060051b83016040018e10156106fc57600080fd5b604083015b6040602085013560051b8501018110156107615767ffffffffffffffff8135111561072b57600080fd5b8e605f82358601011261073d57600080fd5b6107538f8235860160408101359060600161042e565b835260209283019201610701565b5060208481019190915292865250509283019201610602565b5080925050509295509295909350565b6000815180845260005b818110156107b057602081850181015186830182015201610794565b818111156107c2576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610808602083018461078a565b9392505050565b63ffffffff88168152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401528087166060840152508460808301528360a083015260e060c083015261086860e083018461078a565b9998505050505050505050565b60006020828403121561088757600080fd5b5051919050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610987577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610971577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa089850301835261095f84865161078a565b948e01949350918d0191600101610925565b505050978a0197945050918801916001016108b5565b50919a995050505050505050505056fea264697066735822122052c7cebdfe6ac637256402c375f45196fb00a37106315f79f7197ccdf42794d464736f6c634300080f0033",
    "sourceMap": "183:3574:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2906:849;;;;;;:::i;:::-;;:::i;:::-;;1740:828;;;;;;:::i;:::-;;:::i;209:33::-;;;;;;;;;;;;;;;;;;6066:42:30;6054:55;;;6036:74;;6024:2;6009:18;209:33:29;;;;;;;2906:849;3148:21;3183:11;3172:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3205:543;;;3172:23;-1:-1:-1;3205:13:29;:7;:13;;;;3226:10;;3205:543;;3251:17;;3334:6;;3401:1;;3458:10;;3401:1;;3605:2;;3172:23;;3205:543;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3074:681;2906:849;;;;:::o;1740:828::-;2239:21;2306:41;2362:4;2263:113;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2387:174;;;;;2263:113;;-1:-1:-1;2387:13:29;:7;:13;;;;:174;;2414:17;;2445:6;;2465:5;;-1:-1:-1;;2508:6:29;;-1:-1:-1;;2263:113:29;;2387:174;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1931:637;1740:828;;;;;:::o;14:196:30:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:163::-;282:20;;342:10;331:22;;321:33;;311:61;;368:1;365;358:12;383:184;435:77;432:1;425:88;532:4;529:1;522:15;556:4;553:1;546:15;572:251;644:2;638:9;;;674:15;;719:18;704:34;;740:22;;;701:62;698:88;;;766:18;;:::i;:::-;802:2;795:22;572:251;:::o;828:334::-;899:2;893:9;955:2;945:13;;960:66;941:86;929:99;;1058:18;1043:34;;1079:22;;;1040:62;1037:88;;;1105:18;;:::i;:::-;1141:2;1134:22;828:334;;-1:-1:-1;828:334:30:o;1167:466::-;1232:5;1266:18;1258:6;1255:30;1252:56;;;1288:18;;:::i;:::-;1326:116;1436:4;1367:66;1362:2;1354:6;1350:15;1346:88;1342:99;1326:116;:::i;:::-;1317:125;;1465:6;1458:5;1451:21;1505:3;1496:6;1491:3;1487:16;1484:25;1481:45;;;1522:1;1519;1512:12;1481:45;1571:6;1566:3;1559:4;1552:5;1548:16;1535:43;1625:1;1618:4;1609:6;1602:5;1598:18;1594:29;1587:40;1167:466;;;;;:::o;1638:666::-;1733:6;1741;1749;1757;1810:3;1798:9;1789:7;1785:23;1781:33;1778:53;;;1827:1;1824;1817:12;1778:53;1850:29;1869:9;1850:29;:::i;:::-;1840:39;;1898:37;1931:2;1920:9;1916:18;1898:37;:::i;:::-;1888:47;;1986:2;1975:9;1971:18;1958:32;2013:18;2005:6;2002:30;1999:50;;;2045:1;2042;2035:12;1999:50;2068:22;;2121:4;2113:13;;2109:27;-1:-1:-1;2099:55:30;;2150:1;2147;2140:12;2099:55;2173:74;2239:7;2234:2;2221:16;2216:2;2212;2208:11;2173:74;:::i;:::-;1638:666;;;;-1:-1:-1;2163:84:30;;2294:2;2279:18;2266:32;;-1:-1:-1;;;1638:666:30:o;2309:194::-;2380:4;2413:18;2405:6;2402:30;2399:56;;;2435:18;;:::i;:::-;-1:-1:-1;2480:1:30;2476:14;2492:4;2472:25;;2309:194::o;2508:3359::-;2657:6;2665;2673;2681;2689;2742:3;2730:9;2721:7;2717:23;2713:33;2710:53;;;2759:1;2756;2749:12;2710:53;2782:28;2800:9;2782:28;:::i;:::-;2772:38;;2829;2863:2;2852:9;2848:18;2829:38;:::i;:::-;2819:48;;2914:2;2903:9;2899:18;2886:32;2876:42;;2937:38;2971:2;2960:9;2956:18;2937:38;:::i;:::-;2927:48;;3025:18;3018:3;3007:9;3003:19;2990:33;2987:57;2984:77;;;3057:1;3054;3047:12;2984:77;3146:7;3139:4;3131:3;3120:9;3116:19;3103:33;3092:9;3088:49;3084:60;3080:74;3070:102;;3168:1;3165;3158:12;3070:102;3192:132;3208:115;3315:3;3304:9;3300:19;3287:33;3276:9;3272:49;3259:63;3208:115;:::i;:::-;3192:132;:::i;:::-;3426:3;3411:19;;3398:33;3383:49;;3370:63;;3358:76;;;3459:2;3450:12;;;;3346:3;3540:1;3536:71;;;;3481:127;;;3477:136;3474:149;-1:-1:-1;3471:169:30;;;3636:1;3633;3626:12;3471:169;3715:2;3707:3;3696:9;3692:19;3679:33;3668:9;3664:49;3660:58;3727:2110;3873:3;3858:19;;3845:33;3830:49;;3817:63;;3814:1;3810:71;3755:127;3884:2;3751:136;3743:145;;3727:2110;;;3968:18;3962:3;3949:17;3946:41;3943:61;;;4000:1;3997;3990:12;3943:61;4186:2;4117:66;4109:3;4096:17;4088:3;4077:9;4073:19;4060:33;4049:9;4045:49;4041:73;4032:7;4028:87;4024:160;4020:169;4017:189;;;4202:1;4199;4192:12;4017:189;4232:22;;:::i;:::-;4281:102;4379:2;4372:3;4359:17;4351:3;4340:9;4336:19;4323:33;4312:9;4308:49;4304:73;4300:82;4281:102;:::i;:::-;4274:5;4267:117;4501:18;4495:2;4488:3;4475:17;4467:3;4456:9;4452:19;4439:33;4428:9;4424:49;4420:73;4416:82;4403:96;4400:120;4397:140;;;4533:1;4530;4523:12;4397:140;4703:3;4688:19;;4675:33;4660:49;;4711:17;;4656:73;4731:2;4652:82;;4639:96;4560:176;4771:2;4763:11;;4759:25;-1:-1:-1;4749:53:30;;4798:1;4795;4788:12;4749:53;4828:94;4844:77;4916:2;4912;4908:11;4895:25;4844:77;:::i;4828:94::-;5001:2;4993:11;;;4980:25;4966:40;;;5028:14;;;;4948:5;5077:1;5073:33;5065:42;;5109:2;5061:51;5058:64;-1:-1:-1;5055:84:30;;;5135:1;5132;5125:12;5055:84;5173:2;5169;5165:11;5189:533;5267:2;5259;5255;5251:11;5238:25;5235:1;5231:33;5227:2;5223:42;5219:51;5212:5;5209:62;5189:533;;;5369:18;5361:5;5348:19;5345:43;5342:63;;;5401:1;5398;5391:12;5342:63;5475:7;5470:2;5461:5;5448:19;5444:2;5440:28;5436:37;5432:51;5422:79;;5497:1;5494;5487:12;5422:79;5532:135;5659:7;5631:19;;5623:28;;5653:2;5619:37;;5606:51;;5601:2;5567:37;5532:135;:::i;:::-;5518:150;;5705:2;5694:14;;;;5295;5189:533;;;-1:-1:-1;5753:2:30;5742:14;;;5735:29;;;;5777:18;;;-1:-1:-1;;5815:12:30;;;;3906;3727:2110;;;3731:3;5856:5;5846:15;;;;2508:3359;;;;;;;;:::o;6121:531::-;6163:3;6201:5;6195:12;6228:6;6223:3;6216:19;6253:1;6263:162;6277:6;6274:1;6271:13;6263:162;;;6339:4;6395:13;;;6391:22;;6385:29;6367:11;;;6363:20;;6356:59;6292:12;6263:162;;;6443:6;6440:1;6437:13;6434:87;;;6509:1;6502:4;6493:6;6488:3;6484:16;6480:27;6473:38;6434:87;-1:-1:-1;6566:2:30;6554:15;6571:66;6550:88;6541:98;;;;6641:4;6537:109;;6121:531;-1:-1:-1;;6121:531:30:o;6657:220::-;6806:2;6795:9;6788:21;6769:4;6826:45;6867:2;6856:9;6852:18;6844:6;6826:45;:::i;:::-;6818:53;6657:220;-1:-1:-1;;;6657:220:30:o;6882:769::-;7224:10;7216:6;7212:23;7201:9;7194:42;7175:4;7255:42;7345:2;7337:6;7333:15;7328:2;7317:9;7313:18;7306:43;7397:2;7389:6;7385:15;7380:2;7369:9;7365:18;7358:43;7449:2;7441:6;7437:15;7432:2;7421:9;7417:18;7410:43;;7490:6;7484:3;7473:9;7469:19;7462:35;7534:6;7528:3;7517:9;7513:19;7506:35;7578:3;7572;7561:9;7557:19;7550:32;7599:46;7640:3;7629:9;7625:19;7617:6;7599:46;:::i;:::-;7591:54;6882:769;-1:-1:-1;;;;;;;;;6882:769:30:o;7656:184::-;7726:6;7779:2;7767:9;7758:7;7754:23;7750:32;7747:52;;;7795:1;7792;7785:12;7747:52;-1:-1:-1;7818:16:30;;7656:184;-1:-1:-1;7656:184:30:o;7845:1881::-;8076:2;8128:21;;;8198:13;;8101:18;;;8220:22;;;8047:4;;8076:2;8261;;8279:18;;;;8316:1;8359:15;;;8344:31;;8340:40;;8403:15;;;8047:4;;8467:1230;8483:6;8478:3;8475:15;8467:1230;;;8576:66;8552:22;;;8548:95;8536:108;;8667:13;;8754:9;;8765:42;8750:58;8735:74;;8848:11;;8842:18;8880:15;;;8873:27;;;8961:19;;8707:15;;;8993:24;;;9174:21;;;;9040:2;9122:17;;;9110:30;;9106:39;;;9064:15;;;;9219:1;9233:355;9249:8;9244:3;9241:17;9233:355;;;9351:66;9342:6;9334;9330:19;9326:92;9319:5;9312:107;9446:42;9481:6;9470:8;9464:15;9446:42;:::i;:::-;9517:17;;;;9436:52;-1:-1:-1;9560:14:30;;;;9277:1;9268:11;9233:355;;;-1:-1:-1;;;9675:12:30;;;;9611:6;-1:-1:-1;;9640:15:30;;;;8509:1;8500:11;8467:1230;;;-1:-1:-1;9714:6:30;;7845:1881;-1:-1:-1;;;;;;;;;;7845:1881:30:o",
    "linkReferences": {},
    "immutableReferences": {
      "25897": [
        {
          "start": 115,
          "length": 32
        },
        {
          "start": 316,
          "length": 32
        },
        {
          "start": 700,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "connext()": "de4b0548",
    "updateGreeting(address,uint32,string,uint256)": "367b9810",
    "xCallTargetAdapter(uint32,address,uint256,address,(address,bytes[])[])": "48c56903"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IConnext\",\"name\":\"_connext\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"connext\",\"outputs\":[{\"internalType\":\"contract IConnext\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"newGreeting\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"}],\"name\":\"updateGreeting\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"adaptor\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"}],\"internalType\":\"struct HubAdapter.AdaptorCall[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"xCallTargetAdapter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateGreeting(address,uint32,string,uint256)\":{\"params\":{\"destinationDomain\":\"The destination domain ID.\",\"newGreeting\":\"New greeting to update to.\",\"relayerFee\":\"The fee offered to relayers. On testnet, this can be 0.\",\"target\":\"Address of the HelloTarget contract.\"}},\"xCallTargetAdapter(uint32,address,uint256,address,(address,bytes[])[])\":{\"details\":\"Initiates the Connext bridging flow with calldata to be used at the target adaptor.\",\"params\":{\"amount\":\"- Amount of the asset\",\"asset\":\"- The address of Asset\",\"data\":\"- Struct AdaptorCall array used to make calls to adaptors.\",\"destinationDomain\":\"- The unique identifier of destination domain\",\"target\":\"- The address of the TargetAdapter at destination domain\"}}},\"title\":\"HubAdapters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateGreeting(address,uint32,string,uint256)\":{\"notice\":\"Updates a greeting variable on the HelloTarget contract.\"},\"xCallTargetAdapter(uint32,address,uint256,address,(address,bytes[])[])\":{\"notice\":\"Cross-domain strategy execution at target adaptor.\"}},\"notice\":\"TODO\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/HubAdapter.sol\":\"HubAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@aave/=lib/aave-v3-core/\",\":@chainlink/=lib/cellar-contracts/lib/chainlink/\",\":@clones/=lib/clones-with-immutable-args/src/\",\":@connext/nxtp-contracts/contracts/=lib/nxtp/packages/deployments/contracts/contracts/\",\":@ds-test/=lib/cellar-contracts/lib/forge-std/lib/ds-test/src/\",\":@ds/=lib/ds-test/src/\",\":@forge-std/=lib/cellar-contracts/lib/forge-std/src/\",\":@hardhat/=lib/hardhat/\",\":@openzeppelin/contracts-upgradeable/=lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solmate/=lib/cellar-contracts/lib/solmate/src/\",\":@solmate/=lib/solmate/src/\",\":@std/=lib/forge-std/src/\",\":@uniswap/v3-core/=lib/cellar-contracts/lib/v3-core/\",\":@uniswap/v3-periphery/=lib/cellar-contracts/lib/v3-periphery/\",\":@uniswapV3C/=lib/cellar-contracts/lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/cellar-contracts/lib/v3-periphery.git/contracts/\",\":cellar-contracts/=lib/cellar-contracts/src/\",\":cellar/=lib/cellar-contracts/\",\":chainlink/=lib/cellar-contracts/lib/chainlink/contracts/src/v0.8/dev/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":nxtp/=lib/nxtp/packages/deployments/contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/cellar-contracts/lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/cellar-contracts/lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/helpers/LPToken.sol\":{\"keccak256\":\"0x1d3f871488111c70a6f9b09ad3baeb21ebc635c82aa2c6d627d07e09720e4126\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e34efd00dc540ed730716f5515c5a60f75412e0e5a93e0fa39e42b9250866420\",\"dweb:/ipfs/QmQMMzZ6Wqm7wMAL9DUavmLP7QfhAZWS9q7fh1kDBgX5T2\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IConnext.sol\":{\"keccak256\":\"0xf4e97b6638cb0af7c41f69b151ec5c66e8d1532067674aecd71d8587a376be4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fa7f6c34846f8b6c8ad874d0dcccf23c7bc354f83a928e2c74bf3b5125601cb8\",\"dweb:/ipfs/QmbS8We67jtT2SPiaV71HEHSWiu3hDGjEoUMvDVeaywwpb\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xd75a7bfdb3aeac3acebf8cf999330a0fc7bec65e9a68711bbb58f4554ef087b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6426f4d623ef2dc4dda6bc0a27b848650588bda5ae3b430182987d6865769db4\",\"dweb:/ipfs/QmYotgPpzKn5tTBR3feg5vGFTRrX7RJfvvUEDcLSPwDoBW\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0xe6d71029d0a1846712477ccf17aa2124b82996c77b6e6486a208a68ea421f563\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e290712c8163d5b15371081f327d5d92757b30683cda16962e35adaeb82ffaba\",\"dweb:/ipfs/QmX5eqVAARJckBHkSvLCvYhEXs9oooV4RpXRzwYae6TVX4\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IStableSwap.sol\":{\"keccak256\":\"0xfbbb2cad0639658aa781212c69df10718250a6926d94a1a7508fc9927216abe8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc80b384227b7e066bded9c49d5680f3db598f40a8134e9746bde28be577495b\",\"dweb:/ipfs/Qma6jneUbRCPCj48QqRDSTHLXiz2eyodxf2kudJf4aJr1F\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/AmplificationUtils.sol\":{\"keccak256\":\"0x7dca96b10fa307f469c142aaea0855d3c9ba45f79066eaeae1467ce113fc8d28\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c24f4f3b96b38a0cee7df96619a7c2b80603039aff8f146c67bf946bd03e1aa7\",\"dweb:/ipfs/QmVhE9zNjb29Eg2iEtPBchy85VfHeqTmf9JsqxP1tPkHPJ\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/LibConnextStorage.sol\":{\"keccak256\":\"0x24f998cc9edbb1f3f00c7148d18b7ca0d40eaaac7e3f7fa990ffe89bdee8ec32\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c66bb7e6de384ae2f8d585c51ea344f526dae5e51d234ba74f16ea968547b70a\",\"dweb:/ipfs/QmfZdjZsRnzvpFXvDs4Sfct9iSn14yZERoazaQEUuzfi9i\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/LibDiamond.sol\":{\"keccak256\":\"0x0ca55de8a7f4e2256b8b7a5e9ae6cca6d6ff850bbd9fd79542dfc4236871c6d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://366279dde6eb22fe7691f83e90e01e7c97091f89cfc915f026aa12dc6c4084bc\",\"dweb:/ipfs/QmRcsCP8DRVHDCSZgRNJ2Dtj5eV77od71BdnCFxCZnRMvi\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/MathUtils.sol\":{\"keccak256\":\"0xc0e55e78b6b5fec92fbf16f77f10103450f012394d995c8ace507f1abae29371\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eb3d931832b6a921e90b51f2e1de675a3526f8143b87108d90060cefab9c53c8\",\"dweb:/ipfs/Qmdv4rqWhd4Hbg4jQj44WFDbTTnbuDRWSac4ikUqiff9xU\"]},\"lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/SwapUtils.sol\":{\"keccak256\":\"0x3da6aa3cd7cf97886db9958cbb174b8edaf7771aebce5da2a8d87e993a8301fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9818f95d6971094d5ad9160e6698bea6be92c0afb6810175174ada4673c31090\",\"dweb:/ipfs/QmWZHntTedpNkdHRkMr3Etk7xxFutGSpwojRKAVJGHYX84\"]},\"lib/nxtp/packages/deployments/contracts/contracts/messaging/interfaces/IConnectorManager.sol\":{\"keccak256\":\"0xa2c9a88a7b76a89615fe199d8a78878e5deb8dd13b036a86b575d31966beab1a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1fa56558c8a516354e84af9b1a9485d9eb4db3c83be3c29ef2742f32bdb0797f\",\"dweb:/ipfs/QmWiYnbhbrmjVbBztBHJ2sz5NFMikvrGdCMgsdTB6rjicj\"]},\"lib/nxtp/packages/deployments/contracts/contracts/messaging/interfaces/IOutbox.sol\":{\"keccak256\":\"0xe6a213bd3c9e0c4dcf0e982cdef2a6a613a49b7bca3d6ad662c179e509de6c2b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://cbca26ae40f9cf044896e3681c20a60f563a3e35f7f6bdb9365370fe874cfa9f\",\"dweb:/ipfs/QmaLNyciLs4MdHykXidZpFaXx97numdULMy5i5kAdy8KhU\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad\",\"dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x961c8b0ecb2ffd9a29010c55288cb5499afa82a620520babd568aeb89d879814\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c91de771a4fe326a9bbddde63f83c50a70aea22ebc68d075b360a53bf7361d2e\",\"dweb:/ipfs/QmYyDu8X7uzeLXiY9aViz7X94qLAn8cq6RcdTsu1chXCaW\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xce8be5db5e3c4efaef7677186cb624991695a59c2e9c5d2361344514423fb9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19b795af0e8299a0568873e70362cba35c16acf53d163707b010d099b6d0e10c\",\"dweb:/ipfs/QmaNouPTAYYMiQeFGvBUAroDNntJqFNbzpD7oANWYMC21H\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"src/contracts/HubAdapter.sol\":{\"keccak256\":\"0x0a4b036e29f82fc0dea6961bb23b45aa8ba883692c06d697fa90813f64a3fef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://54f10effab79d8f3b2b8c1ec1bcb67f00ac6728c8b41602ea264dc8a49039c16\",\"dweb:/ipfs/QmURN7dn46Tvru2RWrAoAgZoigHh2WwQKsHKJXM11abE48\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IConnext",
              "name": "_connext",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "connext",
          "outputs": [
            {
              "internalType": "contract IConnext",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "destinationDomain",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "newGreeting",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "relayerFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateGreeting"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "destinationDomain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "struct HubAdapter.AdaptorCall[]",
              "name": "data",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "adaptor",
                  "type": "address"
                },
                {
                  "internalType": "bytes[]",
                  "name": "callData",
                  "type": "bytes[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "xCallTargetAdapter"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "updateGreeting(address,uint32,string,uint256)": {
            "params": {
              "destinationDomain": "The destination domain ID.",
              "newGreeting": "New greeting to update to.",
              "relayerFee": "The fee offered to relayers. On testnet, this can be 0.",
              "target": "Address of the HelloTarget contract."
            }
          },
          "xCallTargetAdapter(uint32,address,uint256,address,(address,bytes[])[])": {
            "details": "Initiates the Connext bridging flow with calldata to be used at the target adaptor.",
            "params": {
              "amount": "- Amount of the asset",
              "asset": "- The address of Asset",
              "data": "- Struct AdaptorCall array used to make calls to adaptors.",
              "destinationDomain": "- The unique identifier of destination domain",
              "target": "- The address of the TargetAdapter at destination domain"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "updateGreeting(address,uint32,string,uint256)": {
            "notice": "Updates a greeting variable on the HelloTarget contract."
          },
          "xCallTargetAdapter(uint32,address,uint256,address,(address,bytes[])[])": {
            "notice": "Cross-domain strategy execution at target adaptor."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/aave-v3-core/",
        ":@chainlink/=lib/cellar-contracts/lib/chainlink/",
        ":@clones/=lib/clones-with-immutable-args/src/",
        ":@connext/nxtp-contracts/contracts/=lib/nxtp/packages/deployments/contracts/contracts/",
        ":@ds-test/=lib/cellar-contracts/lib/forge-std/lib/ds-test/src/",
        ":@ds/=lib/ds-test/src/",
        ":@forge-std/=lib/cellar-contracts/lib/forge-std/src/",
        ":@hardhat/=lib/hardhat/",
        ":@openzeppelin/contracts-upgradeable/=lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@solmate/=lib/cellar-contracts/lib/solmate/src/",
        ":@solmate/=lib/solmate/src/",
        ":@std/=lib/forge-std/src/",
        ":@uniswap/v3-core/=lib/cellar-contracts/lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/cellar-contracts/lib/v3-periphery/",
        ":@uniswapV3C/=lib/cellar-contracts/lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/cellar-contracts/lib/v3-periphery.git/contracts/",
        ":cellar-contracts/=lib/cellar-contracts/src/",
        ":cellar/=lib/cellar-contracts/",
        ":chainlink/=lib/cellar-contracts/lib/chainlink/contracts/src/v0.8/dev/vendor/@arbitrum/nitro-contracts/src/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":nxtp/=lib/nxtp/packages/deployments/contracts/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/cellar-contracts/lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/cellar-contracts/lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/HubAdapter.sol": "HubAdapter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/helpers/LPToken.sol": {
        "keccak256": "0x1d3f871488111c70a6f9b09ad3baeb21ebc635c82aa2c6d627d07e09720e4126",
        "urls": [
          "bzz-raw://e34efd00dc540ed730716f5515c5a60f75412e0e5a93e0fa39e42b9250866420",
          "dweb:/ipfs/QmQMMzZ6Wqm7wMAL9DUavmLP7QfhAZWS9q7fh1kDBgX5T2"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IConnext.sol": {
        "keccak256": "0xf4e97b6638cb0af7c41f69b151ec5c66e8d1532067674aecd71d8587a376be4a",
        "urls": [
          "bzz-raw://fa7f6c34846f8b6c8ad874d0dcccf23c7bc354f83a928e2c74bf3b5125601cb8",
          "dweb:/ipfs/QmbS8We67jtT2SPiaV71HEHSWiu3hDGjEoUMvDVeaywwpb"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IDiamondCut.sol": {
        "keccak256": "0xd75a7bfdb3aeac3acebf8cf999330a0fc7bec65e9a68711bbb58f4554ef087b2",
        "urls": [
          "bzz-raw://6426f4d623ef2dc4dda6bc0a27b848650588bda5ae3b430182987d6865769db4",
          "dweb:/ipfs/QmYotgPpzKn5tTBR3feg5vGFTRrX7RJfvvUEDcLSPwDoBW"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0xe6d71029d0a1846712477ccf17aa2124b82996c77b6e6486a208a68ea421f563",
        "urls": [
          "bzz-raw://e290712c8163d5b15371081f327d5d92757b30683cda16962e35adaeb82ffaba",
          "dweb:/ipfs/QmX5eqVAARJckBHkSvLCvYhEXs9oooV4RpXRzwYae6TVX4"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IStableSwap.sol": {
        "keccak256": "0xfbbb2cad0639658aa781212c69df10718250a6926d94a1a7508fc9927216abe8",
        "urls": [
          "bzz-raw://dc80b384227b7e066bded9c49d5680f3db598f40a8134e9746bde28be577495b",
          "dweb:/ipfs/Qma6jneUbRCPCj48QqRDSTHLXiz2eyodxf2kudJf4aJr1F"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/AmplificationUtils.sol": {
        "keccak256": "0x7dca96b10fa307f469c142aaea0855d3c9ba45f79066eaeae1467ce113fc8d28",
        "urls": [
          "bzz-raw://c24f4f3b96b38a0cee7df96619a7c2b80603039aff8f146c67bf946bd03e1aa7",
          "dweb:/ipfs/QmVhE9zNjb29Eg2iEtPBchy85VfHeqTmf9JsqxP1tPkHPJ"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/LibConnextStorage.sol": {
        "keccak256": "0x24f998cc9edbb1f3f00c7148d18b7ca0d40eaaac7e3f7fa990ffe89bdee8ec32",
        "urls": [
          "bzz-raw://c66bb7e6de384ae2f8d585c51ea344f526dae5e51d234ba74f16ea968547b70a",
          "dweb:/ipfs/QmfZdjZsRnzvpFXvDs4Sfct9iSn14yZERoazaQEUuzfi9i"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/LibDiamond.sol": {
        "keccak256": "0x0ca55de8a7f4e2256b8b7a5e9ae6cca6d6ff850bbd9fd79542dfc4236871c6d8",
        "urls": [
          "bzz-raw://366279dde6eb22fe7691f83e90e01e7c97091f89cfc915f026aa12dc6c4084bc",
          "dweb:/ipfs/QmRcsCP8DRVHDCSZgRNJ2Dtj5eV77od71BdnCFxCZnRMvi"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/MathUtils.sol": {
        "keccak256": "0xc0e55e78b6b5fec92fbf16f77f10103450f012394d995c8ace507f1abae29371",
        "urls": [
          "bzz-raw://eb3d931832b6a921e90b51f2e1de675a3526f8143b87108d90060cefab9c53c8",
          "dweb:/ipfs/Qmdv4rqWhd4Hbg4jQj44WFDbTTnbuDRWSac4ikUqiff9xU"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/core/connext/libraries/SwapUtils.sol": {
        "keccak256": "0x3da6aa3cd7cf97886db9958cbb174b8edaf7771aebce5da2a8d87e993a8301fa",
        "urls": [
          "bzz-raw://9818f95d6971094d5ad9160e6698bea6be92c0afb6810175174ada4673c31090",
          "dweb:/ipfs/QmWZHntTedpNkdHRkMr3Etk7xxFutGSpwojRKAVJGHYX84"
        ],
        "license": "UNLICENSED"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/messaging/interfaces/IConnectorManager.sol": {
        "keccak256": "0xa2c9a88a7b76a89615fe199d8a78878e5deb8dd13b036a86b575d31966beab1a",
        "urls": [
          "bzz-raw://1fa56558c8a516354e84af9b1a9485d9eb4db3c83be3c29ef2742f32bdb0797f",
          "dweb:/ipfs/QmWiYnbhbrmjVbBztBHJ2sz5NFMikvrGdCMgsdTB6rjicj"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/nxtp/packages/deployments/contracts/contracts/messaging/interfaces/IOutbox.sol": {
        "keccak256": "0xe6a213bd3c9e0c4dcf0e982cdef2a6a613a49b7bca3d6ad662c179e509de6c2b",
        "urls": [
          "bzz-raw://cbca26ae40f9cf044896e3681c20a60f563a3e35f7f6bdb9365370fe874cfa9f",
          "dweb:/ipfs/QmaLNyciLs4MdHykXidZpFaXx97numdULMy5i5kAdy8KhU"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34",
        "urls": [
          "bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7",
          "dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xb5239b505e918cb7427b939ff15da7bf7c4bb68ccb109caef246a3f58b19ba5e",
        "urls": [
          "bzz-raw://e5f2ea070e870eea699ee433245459f08020a4752df4f5d391de87a529fc2bad",
          "dweb:/ipfs/QmWUcKCKzqQtB6sfJHxGzNj7QRogPmUsW3QQZPAcD3kLSB"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x961c8b0ecb2ffd9a29010c55288cb5499afa82a620520babd568aeb89d879814",
        "urls": [
          "bzz-raw://c91de771a4fe326a9bbddde63f83c50a70aea22ebc68d075b360a53bf7361d2e",
          "dweb:/ipfs/QmYyDu8X7uzeLXiY9aViz7X94qLAn8cq6RcdTsu1chXCaW"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0xce8be5db5e3c4efaef7677186cb624991695a59c2e9c5d2361344514423fb9cf",
        "urls": [
          "bzz-raw://19b795af0e8299a0568873e70362cba35c16acf53d163707b010d099b6d0e10c",
          "dweb:/ipfs/QmaNouPTAYYMiQeFGvBUAroDNntJqFNbzpD7oANWYMC21H"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "src/contracts/HubAdapter.sol": {
        "keccak256": "0x0a4b036e29f82fc0dea6961bb23b45aa8ba883692c06d697fa90813f64a3fef0",
        "urls": [
          "bzz-raw://54f10effab79d8f3b2b8c1ec1bcb67f00ac6728c8b41602ea264dc8a49039c16",
          "dweb:/ipfs/QmURN7dn46Tvru2RWrAoAgZoigHh2WwQKsHKJXM11abE48"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/HubAdapter.sol",
    "id": 25999,
    "exportedSymbols": {
      "HubAdapter": [
        25998
      ],
      "IConnext": [
        18083
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:3716:29",
    "nodes": [
      {
        "id": 25891,
        "nodeType": "PragmaDirective",
        "src": "42:24:29",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 25893,
        "nodeType": "ImportDirective",
        "src": "68:67:29",
        "absolutePath": "lib/nxtp/packages/deployments/contracts/contracts/core/connext/interfaces/IConnext.sol",
        "file": "nxtp/core/connext/interfaces/IConnext.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25999,
        "sourceUnit": 18084,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25892,
              "name": "IConnext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18083,
              "src": "76:8:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25998,
        "nodeType": "ContractDefinition",
        "src": "183:3574:29",
        "nodes": [
          {
            "id": 25897,
            "nodeType": "VariableDeclaration",
            "src": "209:33:29",
            "constant": false,
            "functionSelector": "de4b0548",
            "mutability": "immutable",
            "name": "connext",
            "nameLocation": "235:7:29",
            "scope": 25998,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConnext_$18083",
              "typeString": "contract IConnext"
            },
            "typeName": {
              "id": 25896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25895,
                "name": "IConnext",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18083,
                "src": "209:8:29"
              },
              "referencedDeclaration": 18083,
              "src": "209:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$18083",
                "typeString": "contract IConnext"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25908,
            "nodeType": "FunctionDefinition",
            "src": "851:95:29",
            "body": {
              "id": 25907,
              "nodeType": "Block",
              "src": "882:64:29",
              "statements": [
                {
                  "expression": {
                    "id": 25905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25903,
                      "name": "connext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25897,
                      "src": "892:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConnext_$18083",
                        "typeString": "contract IConnext"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25904,
                      "name": "_connext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25900,
                      "src": "902:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConnext_$18083",
                        "typeString": "contract IConnext"
                      }
                    },
                    "src": "892:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConnext_$18083",
                      "typeString": "contract IConnext"
                    }
                  },
                  "id": 25906,
                  "nodeType": "ExpressionStatement",
                  "src": "892:18:29"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25900,
                  "mutability": "mutable",
                  "name": "_connext",
                  "nameLocation": "872:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25908,
                  "src": "863:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConnext_$18083",
                    "typeString": "contract IConnext"
                  },
                  "typeName": {
                    "id": 25899,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25898,
                      "name": "IConnext",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18083,
                      "src": "863:8:29"
                    },
                    "referencedDeclaration": 18083,
                    "src": "863:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConnext_$18083",
                      "typeString": "contract IConnext"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "862:19:29"
            },
            "returnParameters": {
              "id": 25902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:29"
            },
            "scope": 25998,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25914,
            "nodeType": "StructDefinition",
            "src": "1158:77:29",
            "canonicalName": "HubAdapter.AdaptorCall",
            "members": [
              {
                "constant": false,
                "id": 25910,
                "mutability": "mutable",
                "name": "adaptor",
                "nameLocation": "1195:7:29",
                "nodeType": "VariableDeclaration",
                "scope": 25914,
                "src": "1187:15:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25909,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1187:7:29",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25913,
                "mutability": "mutable",
                "name": "callData",
                "nameLocation": "1220:8:29",
                "nodeType": "VariableDeclaration",
                "scope": 25914,
                "src": "1212:16:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                  "typeString": "bytes[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 25911,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "id": 25912,
                  "nodeType": "ArrayTypeName",
                  "src": "1212:7:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                    "typeString": "bytes[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AdaptorCall",
            "nameLocation": "1165:11:29",
            "scope": 25998,
            "visibility": "public"
          },
          {
            "id": 25959,
            "nodeType": "FunctionDefinition",
            "src": "1740:828:29",
            "body": {
              "id": 25958,
              "nodeType": "Block",
              "src": "1931:637:29",
              "statements": [
                {
                  "assignments": [
                    25931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25931,
                      "mutability": "mutable",
                      "name": "callData",
                      "nameLocation": "2252:8:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 25958,
                      "src": "2239:21:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25930,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2239:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25942,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "63616c6c4f6e41646170746f722841646170746f7243616c6c5b5d29",
                                "id": 25937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2316:30:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6b983df01756c6049e85ecef6b0808d165eeb1606579127bbd16f81644748795",
                                  "typeString": "literal_string \"callOnAdaptor(AdaptorCall[])\""
                                },
                                "value": "callOnAdaptor(AdaptorCall[])"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_6b983df01756c6049e85ecef6b0808d165eeb1606579127bbd16f81644748795",
                                  "typeString": "literal_string \"callOnAdaptor(AdaptorCall[])\""
                                }
                              ],
                              "id": 25936,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2306:9:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 25938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2306:41:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 25935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2299:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 25934,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "2299:6:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2299:49:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 25940,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25927,
                        "src": "2362:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdaptorCall_$25914_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct HubAdapter.AdaptorCall memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdaptorCall_$25914_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct HubAdapter.AdaptorCall memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 25932,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2263:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 25933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "2263:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 25941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:113:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2239:137:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25946,
                        "name": "destinationDomain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25917,
                        "src": "2414:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 25947,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25923,
                        "src": "2445:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25948,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25919,
                        "src": "2465:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2492:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2484:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25949,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2484:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2484:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25953,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25921,
                        "src": "2508:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2528:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 25955,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25931,
                        "src": "2543:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25943,
                        "name": "connext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25897,
                        "src": "2387:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConnext_$18083",
                          "typeString": "contract IConnext"
                        }
                      },
                      "id": 25945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "xcall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17413,
                      "src": "2387:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint32,address,address,address,uint256,uint256,bytes memory) payable external returns (bytes32)"
                      }
                    },
                    "id": 25956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2387:174:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25957,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:174:29"
                }
              ]
            },
            "documentation": {
              "id": 25915,
              "nodeType": "StructuredDocumentation",
              "src": "1241:493:29",
              "text": " @notice Cross-domain strategy execution at target adaptor.\n @dev Initiates the Connext bridging flow with calldata to be used at the target adaptor.\n @param destinationDomain - The unique identifier of destination domain\n @param asset - The address of Asset\n @param amount - Amount of the asset\n @param target - The address of the TargetAdapter at destination domain\n @param data - Struct AdaptorCall array used to make calls to adaptors."
            },
            "functionSelector": "48c56903",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "xCallTargetAdapter",
            "nameLocation": "1749:18:29",
            "parameters": {
              "id": 25928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25917,
                  "mutability": "mutable",
                  "name": "destinationDomain",
                  "nameLocation": "1784:17:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25959,
                  "src": "1777:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 25916,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25919,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1819:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25959,
                  "src": "1811:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25921,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1842:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25959,
                  "src": "1834:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25923,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1866:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25959,
                  "src": "1858:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25927,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1903:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25959,
                  "src": "1882:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdaptorCall_$25914_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct HubAdapter.AdaptorCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25925,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 25924,
                        "name": "AdaptorCall",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25914,
                        "src": "1882:11:29"
                      },
                      "referencedDeclaration": 25914,
                      "src": "1882:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdaptorCall_$25914_storage_ptr",
                        "typeString": "struct HubAdapter.AdaptorCall"
                      }
                    },
                    "id": 25926,
                    "nodeType": "ArrayTypeName",
                    "src": "1882:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdaptorCall_$25914_storage_$dyn_storage_ptr",
                      "typeString": "struct HubAdapter.AdaptorCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:146:29"
            },
            "returnParameters": {
              "id": 25929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:0:29"
            },
            "scope": 25998,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25997,
            "nodeType": "FunctionDefinition",
            "src": "2906:849:29",
            "body": {
              "id": 25996,
              "nodeType": "Block",
              "src": "3074:681:29",
              "statements": [
                {
                  "assignments": [
                    25972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25972,
                      "mutability": "mutable",
                      "name": "callData",
                      "nameLocation": "3161:8:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 25996,
                      "src": "3148:21:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25971,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3148:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25977,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25975,
                        "name": "newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25966,
                        "src": "3183:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 25973,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3172:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 25974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "3172:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 25976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:23:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3148:47:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25983,
                        "name": "destinationDomain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25964,
                        "src": "3251:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 25984,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25962,
                        "src": "3334:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3401:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3393:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25985,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3393:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3393:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25989,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3458:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3458:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3549:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "3330",
                        "id": 25992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:2:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      {
                        "id": 25993,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25972,
                        "src": "3687:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 25978,
                          "name": "connext",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25897,
                          "src": "3205:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConnext_$18083",
                            "typeString": "contract IConnext"
                          }
                        },
                        "id": 25980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "xcall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17413,
                        "src": "3205:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint32,address,address,address,uint256,uint256,bytes memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 25982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 25981,
                          "name": "relayerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25968,
                          "src": "3226:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3205:32:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$value",
                        "typeString": "function (uint32,address,address,address,uint256,uint256,bytes memory) payable external returns (bytes32)"
                      }
                    },
                    "id": 25994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:543:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25995,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:543:29"
                }
              ]
            },
            "documentation": {
              "id": 25960,
              "nodeType": "StructuredDocumentation",
              "src": "2574:327:29",
              "text": "@notice Updates a greeting variable on the HelloTarget contract.\n @param target Address of the HelloTarget contract.\n @param destinationDomain The destination domain ID.\n @param newGreeting New greeting to update to.\n @param relayerFee The fee offered to relayers. On testnet, this can be 0."
            },
            "functionSelector": "367b9810",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateGreeting",
            "nameLocation": "2915:14:29",
            "parameters": {
              "id": 25969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25962,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2947:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25997,
                  "src": "2939:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25964,
                  "mutability": "mutable",
                  "name": "destinationDomain",
                  "nameLocation": "2970:17:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25997,
                  "src": "2963:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 25963,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25966,
                  "mutability": "mutable",
                  "name": "newGreeting",
                  "nameLocation": "3011:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25997,
                  "src": "2997:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25965,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25968,
                  "mutability": "mutable",
                  "name": "relayerFee",
                  "nameLocation": "3040:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 25997,
                  "src": "3032:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3032:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2929:127:29"
            },
            "returnParameters": {
              "id": 25970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3074:0:29"
            },
            "scope": 25998,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HubAdapter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25894,
          "nodeType": "StructuredDocumentation",
          "src": "137:45:29",
          "text": " @title HubAdapters\n @notice TODO"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25998
        ],
        "name": "HubAdapter",
        "nameLocation": "192:10:29",
        "scope": 25999,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 29
}