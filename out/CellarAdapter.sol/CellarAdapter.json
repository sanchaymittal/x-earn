{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract SwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "_doSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract SwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600080546001600160a01b03199081167375e4dd0587663fce5b2d9af7fbed3ac54342d3db1790915560018054821673edb95d8037f769b72aaab41deec92903a98c9e1617905560028054909116731e5341e4b7ed5d0680d9066aac0396f0b1bd1e6917905534801561007657600080fd5b506040516105c93803806105c9833981016040819052610095916100a6565b6001600160a01b03166080526100d6565b6000602082840312156100b857600080fd5b81516001600160a01b03811681146100cf57600080fd5b9392505050565b6080516104d26100f7600039600081816066015261023d01526104d26000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306a8e8c21461003b578063c31c9c0714610061575b600080fd5b61004e6100493660046102ca565b6100ad565b6040519081526020015b60405180910390f35b6100887f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610058565b604080516002808252606082018352600092839291906020830190803683375050600154825192935073ffffffffffffffffffffffffffffffffffffffff16918391506000906100ff576100ff6102e3565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201015260025482519116908290600190811061013d5761013d6102e3565b73ffffffffffffffffffffffffffffffffffffffff9290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050610bb88160008151811061019d5761019d6102e3565b62ffffff9092166020928302919091018201526040516000916101c891859185918991869101610312565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526000546001546002547f299ae48a00000000000000000000000000000000000000000000000000000000855292945073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081169463299ae48a9461027e94889490841693908116929116906004016103b7565b6020604051808303816000875af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610483565b95945050505050565b6000602082840312156102dc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6080808252855190820181905260009060209060a0840190828901845b8281101561036157815173ffffffffffffffffffffffffffffffffffffffff168452928401929084019060010161032f565b5050508381038285015286518082528783019183019060005b8181101561039b57835162ffffff168352928401929184019160010161037a565b50506040850187905260ff8616606086015292506102c1915050565b608081526000855180608084015260005b818110156103e557602081890181015160a08684010152016103c8565b818111156103f757600060a083860101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160a0019050610446602083018673ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff8416604083015273ffffffffffffffffffffffffffffffffffffffff831660608301526102c1565b60006020828403121561049557600080fd5b505191905056fea2646970667358221220de3be13e9a4778ece9ca24b9b22802abef776d007798eefe8e612cd2974e3d1564736f6c634300080f0033",
    "sourceMap": "263:829:12:-:0;;;292:87;;;-1:-1:-1;;;;;;292:87:12;;;336:42;292:87;;;;;386:71;;;;414:42;386:71;;;463;;;;;;491:42;463:71;;;586:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;632:24:12;;;263:829;;14:310:15;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:15;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:15:o;:::-;263:829:12;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806306a8e8c21461003b578063c31c9c0714610061575b600080fd5b61004e6100493660046102ca565b6100ad565b6040519081526020015b60405180910390f35b6100887f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610058565b604080516002808252606082018352600092839291906020830190803683375050600154825192935073ffffffffffffffffffffffffffffffffffffffff16918391506000906100ff576100ff6102e3565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201015260025482519116908290600190811061013d5761013d6102e3565b73ffffffffffffffffffffffffffffffffffffffff9290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050610bb88160008151811061019d5761019d6102e3565b62ffffff9092166020928302919091018201526040516000916101c891859185918991869101610312565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526000546001546002547f299ae48a00000000000000000000000000000000000000000000000000000000855292945073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081169463299ae48a9461027e94889490841693908116929116906004016103b7565b6020604051808303816000875af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610483565b95945050505050565b6000602082840312156102dc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6080808252855190820181905260009060209060a0840190828901845b8281101561036157815173ffffffffffffffffffffffffffffffffffffffff168452928401929084019060010161032f565b5050508381038285015286518082528783019183019060005b8181101561039b57835162ffffff168352928401929184019160010161037a565b50506040850187905260ff8616606086015292506102c1915050565b608081526000855180608084015260005b818110156103e557602081890181015160a08684010152016103c8565b818111156103f757600060a083860101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160a0019050610446602083018673ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff8416604083015273ffffffffffffffffffffffffffffffffffffffff831660608301526102c1565b60006020828403121561049557600080fd5b505191905056fea2646970667358221220de3be13e9a4778ece9ca24b9b22802abef776d007798eefe8e612cd2974e3d1564736f6c634300080f0033",
    "sourceMap": "263:829:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:421;;;;;;:::i;:::-;;:::i;:::-;;;345:25:15;;;333:2;318:18;669:421:12;;;;;;;;541:38;;;;;;;;721:42:15;709:55;;;691:74;;679:2;664:18;541:38:12;525:246:15;669:421:12;772:16;;;786:1;772:16;;;;;;;;720;;;;772;786:1;772:16;;;;;;;;-1:-1:-1;;816:4:12;;798:7;;;;-1:-1:-1;816:4:12;;;798:7;;-1:-1:-1;816:4:12;;798:7;;;;:::i;:::-;:23;;;;:7;;;;;;;;;:23;849:4;;831:7;;849:4;;;831;;849;;831:7;;;;;;:::i;:::-;:23;;;;;:7;;;;;;;;;;;:23;892:15;;;905:1;892:15;;;;;;;;;865:24;;892:15;;;;;;;;;;;;-1:-1:-1;892:15:12;865:42;;931:4;917:8;926:1;917:11;;;;;;;;:::i;:::-;:18;;;;:11;;;;;;;;;;:18;978:37;;954:21;;978:37;;989:4;;995:8;;1005:6;;954:21;;978:37;;:::i;:::-;;;;;;;;;;;;;;;1062:8;;;1072:4;1078;;1036:47;;;978:37;;-1:-1:-1;1036:15:12;:10;:15;;;;;:47;;978:37;;1062:8;;;;1072:4;;;;1078;;;1036:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1025:58;669:421;-1:-1:-1;;;;;669:421:12:o;14:180:15:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:15;;14:180;-1:-1:-1;14:180:15:o;965:184::-;1017:77;1014:1;1007:88;1114:4;1111:1;1104:15;1138:4;1135:1;1128:15;1240:1381;1568:3;1581:22;;;1652:13;;1553:19;;;1674:22;;;1520:4;;1750;;1727:3;1712:19;;;1777:15;;;1520:4;1820:218;1834:6;1831:1;1828:13;1820:218;;;1899:13;;1914:42;1895:62;1883:75;;1978:12;;;;2013:15;;;;1856:1;1849:9;1820:218;;;-1:-1:-1;;;2074:19:15;;;2054:18;;;2047:47;2144:13;;2166:21;;;2242:15;;;;2205:12;;;2277:1;2287:204;2303:8;2298:3;2295:17;2287:204;;;2376:15;;2393:8;2372:30;2358:45;;2464:17;;;;2425:14;;;;2331:1;2322:11;2287:204;;;-1:-1:-1;;2544:2:15;2529:18;;2522:34;;;1227:4;1216:16;;2611:2;2596:18;;1204:29;2508:5;-1:-1:-1;2565:50:15;;-1:-1:-1;;1154:81:15;2626:959;2887:3;2876:9;2869:22;2850:4;2920:6;2914:13;2964:6;2958:3;2947:9;2943:19;2936:35;2989:1;2999:145;3013:6;3010:1;3007:13;2999:145;;;3127:4;3111:14;;;3107:25;;3101:32;3095:3;3076:17;;;3072:27;3065:69;3028:12;2999:145;;;3162:6;3159:1;3156:13;3153:92;;;3233:1;3227:3;3218:6;3207:9;3203:22;3199:32;3192:43;3153:92;-1:-1:-1;3297:2:15;3285:15;3302:66;3281:88;3266:104;;3372:3;3262:114;;-1:-1:-1;3385:60:15;3439:4;3424:20;;3416:6;470:42;459:54;447:67;;381:139;3385:60;470:42;459:54;;3508:2;3493:18;;447:67;470:42;459:54;;3575:2;3560:18;;447:67;3521:58;381:139;3590:184;3660:6;3713:2;3701:9;3692:7;3688:23;3684:32;3681:52;;;3729:1;3726;3719:12;3681:52;-1:-1:-1;3752:16:15;;3590:184;-1:-1:-1;3590:184:15:o",
    "linkReferences": {},
    "immutableReferences": {
      "18424": [
        {
          "start": 102,
          "length": 32
        },
        {
          "start": 573,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_doSwap(uint256)": "06a8e8c2",
    "swapRouter()": "c31c9c07"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract SwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"_doSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract SwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/CellarAdapter.sol\":\"CellarAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@aave/=lib/aave-v3-core/\",\":@chainlink/=lib/cellar-contracts/lib/chainlink/\",\":@clones/=lib/clones-with-immutable-args/src/\",\":@connext/nxtp-contracts/contracts/=lib/nxtp/packages/deployments/contracts/contracts/\",\":@ds-test/=lib/cellar-contracts/lib/forge-std/lib/ds-test/src/\",\":@ds/=lib/ds-test/src/\",\":@forge-std/=lib/cellar-contracts/lib/forge-std/src/\",\":@hardhat/=lib/hardhat/\",\":@openzeppelin/contracts-upgradeable/=lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solmate/=lib/cellar-contracts/lib/solmate/src/\",\":@solmate/=lib/solmate/src/\",\":@std/=lib/forge-std/src/\",\":@uniswap/v3-core/=lib/cellar-contracts/lib/v3-core/\",\":@uniswap/v3-periphery/=lib/cellar-contracts/lib/v3-periphery/\",\":@uniswapV3C/=lib/cellar-contracts/lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/cellar-contracts/lib/v3-periphery.git/contracts/\",\":cellar-contracts/=lib/cellar-contracts/src/\",\":cellar/=lib/cellar-contracts/\",\":chainlink/=lib/cellar-contracts/lib/chainlink/contracts/src/v0.8/dev/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":nxtp/=lib/nxtp/packages/deployments/contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/cellar-contracts/lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/cellar-contracts/lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/contracts/CellarAdapter.sol\":{\"keccak256\":\"0xe15e92d6e5a3380912c2376f9bd732a5564e2d2409d5cd959e9c7511e64c4293\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://50f128367eef7473a035c3975965a87fb4b4fe4e3b72a351fbee89eb0d3c0ec1\",\"dweb:/ipfs/QmYKUDtdH3dv68bm7c3eusrZRbYS6j8o1G4fdvGmN91Ddb\"]},\"src/contracts/SwapRouter.sol\":{\"keccak256\":\"0xcc0a54f4ad1bc2acdd4f542b804ac9b305f6b4fc49b1f09323ab685346551a6b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8624b21c8c209cedbf54474f302493fc40c05b6ee9f752e2b2f0e7a14cdf1112\",\"dweb:/ipfs/QmXdWdYNy6vdnvUDS7oZmUBV8UZKKTS1GGLHMdWunALcAL\"]},\"src/contracts/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x1984c132d64a350db3970059c540d2d6d46a4fa97952da05403b16714dd04b8a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://18e18fdd4af92de9c615a498feaa4c30a506622d335d21f2b1c38b1be786c77a\",\"dweb:/ipfs/QmYhsfatr69tFeoxx3fihmfk1YPFn2kzHCHNqdwpWkcRgu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract SwapRouter",
              "name": "_swapRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_doSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract SwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/aave-v3-core/",
        ":@chainlink/=lib/cellar-contracts/lib/chainlink/",
        ":@clones/=lib/clones-with-immutable-args/src/",
        ":@connext/nxtp-contracts/contracts/=lib/nxtp/packages/deployments/contracts/contracts/",
        ":@ds-test/=lib/cellar-contracts/lib/forge-std/lib/ds-test/src/",
        ":@ds/=lib/ds-test/src/",
        ":@forge-std/=lib/cellar-contracts/lib/forge-std/src/",
        ":@hardhat/=lib/hardhat/",
        ":@openzeppelin/contracts-upgradeable/=lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@solmate/=lib/cellar-contracts/lib/solmate/src/",
        ":@solmate/=lib/solmate/src/",
        ":@std/=lib/forge-std/src/",
        ":@uniswap/v3-core/=lib/cellar-contracts/lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/cellar-contracts/lib/v3-periphery/",
        ":@uniswapV3C/=lib/cellar-contracts/lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/cellar-contracts/lib/v3-periphery.git/contracts/",
        ":cellar-contracts/=lib/cellar-contracts/src/",
        ":cellar/=lib/cellar-contracts/",
        ":chainlink/=lib/cellar-contracts/lib/chainlink/contracts/src/v0.8/dev/vendor/@arbitrum/nitro-contracts/src/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":nxtp/=lib/nxtp/packages/deployments/contracts/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/cellar-contracts/lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/cellar-contracts/lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/CellarAdapter.sol": "CellarAdapter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/contracts/CellarAdapter.sol": {
        "keccak256": "0xe15e92d6e5a3380912c2376f9bd732a5564e2d2409d5cd959e9c7511e64c4293",
        "urls": [
          "bzz-raw://50f128367eef7473a035c3975965a87fb4b4fe4e3b72a351fbee89eb0d3c0ec1",
          "dweb:/ipfs/QmYKUDtdH3dv68bm7c3eusrZRbYS6j8o1G4fdvGmN91Ddb"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/SwapRouter.sol": {
        "keccak256": "0xcc0a54f4ad1bc2acdd4f542b804ac9b305f6b4fc49b1f09323ab685346551a6b",
        "urls": [
          "bzz-raw://8624b21c8c209cedbf54474f302493fc40c05b6ee9f752e2b2f0e7a14cdf1112",
          "dweb:/ipfs/QmXdWdYNy6vdnvUDS7oZmUBV8UZKKTS1GGLHMdWunALcAL"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x1984c132d64a350db3970059c540d2d6d46a4fa97952da05403b16714dd04b8a",
        "urls": [
          "bzz-raw://18e18fdd4af92de9c615a498feaa4c30a506622d335d21f2b1c38b1be786c77a",
          "dweb:/ipfs/QmYhsfatr69tFeoxx3fihmfk1YPFn2kzHCHNqdwpWkcRgu"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/CellarAdapter.sol",
    "id": 18511,
    "exportedSymbols": {
      "CellarAdapter": [
        18510
      ],
      "ERC20": [
        17579
      ],
      "SafeERC20": [
        17999
      ],
      "SwapRouter": [
        18784
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1054:12",
    "nodes": [
      {
        "id": 18397,
        "nodeType": "PragmaDirective",
        "src": "39:24:12",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ]
      },
      {
        "id": 18399,
        "nodeType": "ImportDirective",
        "src": "65:68:12",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18511,
        "sourceUnit": 17580,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18398,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17579,
              "src": "73:5:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18401,
        "nodeType": "ImportDirective",
        "src": "134:82:12",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18511,
        "sourceUnit": 18000,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18400,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17999,
              "src": "142:9:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18403,
        "nodeType": "ImportDirective",
        "src": "217:44:12",
        "absolutePath": "src/contracts/SwapRouter.sol",
        "file": "./SwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18511,
        "sourceUnit": 18785,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18402,
              "name": "SwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18784,
              "src": "225:10:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18510,
        "nodeType": "ContractDefinition",
        "src": "263:829:12",
        "nodes": [
          {
            "id": 18409,
            "nodeType": "VariableDeclaration",
            "src": "292:87:12",
            "constant": false,
            "mutability": "mutable",
            "name": "receiver",
            "nameLocation": "309:8:12",
            "scope": 18510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "292:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837356534444430353837363633466365354232443961463766624544334143353433343264336442",
                  "id": 18407,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "336:42:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x75e4DD0587663Fce5B2D9aF7fbED3AC54342d3dB"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 18406,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "328:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 18405,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:7:12",
                  "typeDescriptions": {}
                }
              },
              "id": 18408,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "328:51:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18415,
            "nodeType": "VariableDeclaration",
            "src": "386:71:12",
            "constant": false,
            "mutability": "mutable",
            "name": "TEST",
            "nameLocation": "401:4:12",
            "scope": 18510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$17579",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 18411,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18410,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17579,
                "src": "386:5:12"
              },
              "referencedDeclaration": 17579,
              "src": "386:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$17579",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307865446239354438303337663736394237324141616234316465654339323930334139384339453136",
                  "id": 18413,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "414:42:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xeDb95D8037f769B72AAab41deeC92903A98C9E16"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 18412,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 17579,
                "src": "408:5:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$17579_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 18414,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "408:49:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$17579",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18421,
            "nodeType": "VariableDeclaration",
            "src": "463:71:12",
            "constant": false,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "478:4:12",
            "scope": 18510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$17579",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 18417,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18416,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17579,
                "src": "463:5:12"
              },
              "referencedDeclaration": 17579,
              "src": "463:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$17579",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831453533343145346237656435443036383064393036366161633033393646306231624431453639",
                  "id": 18419,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "491:42:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1E5341E4b7ed5D0680d9066aac0396F0b1bD1E69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 18418,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 17579,
                "src": "485:5:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$17579_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 18420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "485:49:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$17579",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18424,
            "nodeType": "VariableDeclaration",
            "src": "541:38:12",
            "constant": false,
            "functionSelector": "c31c9c07",
            "mutability": "immutable",
            "name": "swapRouter",
            "nameLocation": "569:10:12",
            "scope": 18510,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SwapRouter_$18784",
              "typeString": "contract SwapRouter"
            },
            "typeName": {
              "id": 18423,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18422,
                "name": "SwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18784,
                "src": "541:10:12"
              },
              "referencedDeclaration": 18784,
              "src": "541:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapRouter_$18784",
                "typeString": "contract SwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 18435,
            "nodeType": "FunctionDefinition",
            "src": "586:77:12",
            "body": {
              "id": 18434,
              "nodeType": "Block",
              "src": "622:41:12",
              "statements": [
                {
                  "expression": {
                    "id": 18432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18430,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18424,
                      "src": "632:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapRouter_$18784",
                        "typeString": "contract SwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18431,
                      "name": "_swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18427,
                      "src": "645:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapRouter_$18784",
                        "typeString": "contract SwapRouter"
                      }
                    },
                    "src": "632:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapRouter_$18784",
                      "typeString": "contract SwapRouter"
                    }
                  },
                  "id": 18433,
                  "nodeType": "ExpressionStatement",
                  "src": "632:24:12"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 18428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18427,
                  "mutability": "mutable",
                  "name": "_swapRouter",
                  "nameLocation": "609:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 18435,
                  "src": "598:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SwapRouter_$18784",
                    "typeString": "contract SwapRouter"
                  },
                  "typeName": {
                    "id": 18426,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18425,
                      "name": "SwapRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18784,
                      "src": "598:10:12"
                    },
                    "referencedDeclaration": 18784,
                    "src": "598:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapRouter_$18784",
                      "typeString": "contract SwapRouter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:24:12"
            },
            "returnParameters": {
              "id": 18429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:0:12"
            },
            "scope": 18510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18509,
            "nodeType": "FunctionDefinition",
            "src": "669:421:12",
            "body": {
              "id": 18508,
              "nodeType": "Block",
              "src": "738:352:12",
              "statements": [
                {
                  "assignments": [
                    18446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18446,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "765:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 18508,
                      "src": "748:21:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 18444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "748:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 18445,
                        "nodeType": "ArrayTypeName",
                        "src": "748:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18452,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 18450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "786:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 18449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "772:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 18447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "776:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 18448,
                        "nodeType": "ArrayTypeName",
                        "src": "776:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 18451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:16:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "748:40:12"
                },
                {
                  "expression": {
                    "id": 18460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18453,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18446,
                        "src": "798:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 18455,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 18454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "798:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 18458,
                          "name": "TEST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18415,
                          "src": "816:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 18457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "808:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 18456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 18459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "808:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "798:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18461,
                  "nodeType": "ExpressionStatement",
                  "src": "798:23:12"
                },
                {
                  "expression": {
                    "id": 18469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18462,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18446,
                        "src": "831:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 18464,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 18463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "831:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 18467,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18421,
                          "src": "849:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 18466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "841:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 18465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "841:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 18468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "841:13:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "831:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18470,
                  "nodeType": "ExpressionStatement",
                  "src": "831:23:12"
                },
                {
                  "assignments": [
                    18475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18475,
                      "mutability": "mutable",
                      "name": "poolFees",
                      "nameLocation": "881:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 18508,
                      "src": "865:24:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                        "typeString": "uint24[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 18473,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "865:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 18474,
                        "nodeType": "ArrayTypeName",
                        "src": "865:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
                          "typeString": "uint24[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18481,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 18479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "905:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 18478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "892:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint24_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint24[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 18476,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "896:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 18477,
                        "nodeType": "ArrayTypeName",
                        "src": "896:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
                          "typeString": "uint24[]"
                        }
                      }
                    },
                    "id": 18480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:15:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                      "typeString": "uint24[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "865:42:12"
                },
                {
                  "expression": {
                    "id": 18486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18482,
                        "name": "poolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18475,
                        "src": "917:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                          "typeString": "uint24[] memory"
                        }
                      },
                      "id": 18484,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 18483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "926:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "917:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33303030",
                      "id": 18485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3000_by_1",
                        "typeString": "int_const 3000"
                      },
                      "value": "3000"
                    },
                    "src": "917:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 18487,
                  "nodeType": "ExpressionStatement",
                  "src": "917:18:12"
                },
                {
                  "assignments": [
                    18489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18489,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "967:8:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 18508,
                      "src": "954:21:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18488,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "954:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 18492,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18446,
                        "src": "989:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 18493,
                        "name": "poolFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18475,
                        "src": "995:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                          "typeString": "uint24[] memory"
                        }
                      },
                      {
                        "id": 18494,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18437,
                        "src": "1005:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 18495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1013:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                          "typeString": "uint24[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 18490,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "978:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 18491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "978:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 18496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "954:61:12"
                },
                {
                  "expression": {
                    "id": 18506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18498,
                      "name": "received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18440,
                      "src": "1025:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 18501,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18489,
                          "src": "1052:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 18502,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18409,
                          "src": "1062:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 18503,
                          "name": "TEST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18415,
                          "src": "1072:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 18504,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18421,
                          "src": "1078:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$17579",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "expression": {
                          "id": 18499,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18424,
                          "src": "1036:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapRouter_$18784",
                            "typeString": "contract SwapRouter"
                          }
                        },
                        "id": 18500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18620,
                        "src": "1036:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_contract$_ERC20_$17579_$_t_contract$_ERC20_$17579_$returns$_t_uint256_$",
                          "typeString": "function (bytes memory,address,contract ERC20,contract ERC20) external returns (uint256)"
                        }
                      },
                      "id": 18505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1036:47:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1025:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18507,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:58:12"
                }
              ]
            },
            "functionSelector": "06a8e8c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSwap",
            "nameLocation": "678:7:12",
            "parameters": {
              "id": 18438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18437,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "694:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 18509,
                  "src": "686:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:16:12"
            },
            "returnParameters": {
              "id": 18441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18440,
                  "mutability": "mutable",
                  "name": "received",
                  "nameLocation": "728:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 18509,
                  "src": "720:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:18:12"
            },
            "scope": 18510,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CellarAdapter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18510
        ],
        "name": "CellarAdapter",
        "nameLocation": "272:13:12",
        "scope": 18511,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 12
}