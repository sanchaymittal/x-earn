{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Router",
          "name": "_uniswapV3Router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "actual",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "expected",
          "type": "address"
        }
      ],
      "name": "SwapRouter__AssetInMisMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "actual",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "expected",
          "type": "address"
        }
      ],
      "name": "SwapRouter__AssetOutMisMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapRouter__SwapReverted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "swapData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "assetIn",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "assetOut",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "swapData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "assetIn",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "assetOut",
          "type": "address"
        }
      ],
      "name": "swapWithUniV3",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV3Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161123838038061123883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516111a06100986000396000818160710152818161043b015261052601526111a06000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063299ae48a146100465780632c76d7a61461006c5780639d453f8d146100b8575b600080fd5b610059610054366004610c3d565b6100cb565b6040519081526020015b60405180910390f35b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610063565b6100596100c6366004610c3d565b61023a565b60008060003073ffffffffffffffffffffffffffffffffffffffff16639d453f8d60e01b888888886040516024016101069493929190610d98565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161018f9190610de1565b600060405180830381855af49150503d80600081146101ca576040519150601f19603f3d011682016040523d82523d6000602084013e6101cf565b606091505b50915091508161021b578051156101e95780518082602001fd5b6040517f8e2cf9de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080602001905181019061022f9190610dfd565b979650505050505050565b6000806000806000888060200190518101906102569190610eb7565b93509350935093508360008151811061027157610271610f8c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461032657836000815181106102be576102be610f8c565b6020026020010151876040517fe539288100000000000000000000000000000000000000000000000000000000815260040161031d92919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b60405180910390fd5b83600185516103359190610fea565b8151811061034557610345610f8c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146103fd57836001855161038e9190610fea565b8151811061039e5761039e610f8c565b6020026020010151866040517f47052b6700000000000000000000000000000000000000000000000000000000815260040161031d92919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b61041f73ffffffffffffffffffffffffffffffffffffffff8816333085610616565b61046073ffffffffffffffffffffffffffffffffffffffff88167f0000000000000000000000000000000000000000000000000000000000000000846106f8565b60408051606089901b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015281516014818303018152603490910190915260015b85518110156105235781856104bb600184610fea565b815181106104cb576104cb610f8c565b60200260200101518783815181106104e5576104e5610f8c565b60200260200101516040516020016104ff93929190611001565b6040516020818303038152906040529150808061051b90611078565b9150506104a5565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c04b8d596040518060a001604052808481526020018c73ffffffffffffffffffffffffffffffffffffffff16815260200142603c61059a91906110b0565b8152602001868152602001858152506040518263ffffffff1660e01b81526004016105c591906110c8565b6020604051808303816000875af11580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190610dfd565b9a9950505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526106f29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261087f565b50505050565b80158061079857506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190610dfd565b155b610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161031d565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261087a9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610670565b505050565b60006108e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661098b9092919063ffffffff16565b80519091501561087a57808060200190518101906108ff919061112e565b61087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161031d565b606061099a84846000856109a2565b949350505050565b606082471015610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161031d565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610a5d9190610de1565b60006040518083038185875af1925050503d8060008114610a9a576040519150601f19603f3d011682016040523d82523d6000602084013e610a9f565b606091505b509150915061022f8783838760608315610b41578251600003610b3a5773ffffffffffffffffffffffffffffffffffffffff85163b610b3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161031d565b508161099a565b61099a8383815115610b565781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190611157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c0057610c00610b8a565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c2a57600080fd5b50565b8035610c3881610c08565b919050565b60008060008060808587031215610c5357600080fd5b843567ffffffffffffffff80821115610c6b57600080fd5b818701915087601f830112610c7f57600080fd5b8135602082821115610c9357610c93610b8a565b610cc3817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610bb9565b92508183528981838601011115610cd957600080fd5b81818501828501376000818385010152829750610cf7818a01610c2d565b965050505050610d0960408601610c2d565b9150610d1760608601610c2d565b905092959194509250565b60005b83811015610d3d578181015183820152602001610d25565b838111156106f25750506000910152565b60008151808452610d66816020860160208601610d22565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b608081526000610dab6080830187610d4e565b73ffffffffffffffffffffffffffffffffffffffff95861660208401529385166040830152509216606090920191909152919050565b60008251610df3818460208701610d22565b9190910192915050565b600060208284031215610e0f57600080fd5b5051919050565b600067ffffffffffffffff821115610e3057610e30610b8a565b5060051b60200190565b600082601f830112610e4b57600080fd5b81516020610e60610e5b83610e16565b610bb9565b82815260059290921b84018101918181019086841115610e7f57600080fd5b8286015b84811015610eac57805162ffffff81168114610e9f5760008081fd5b8352918301918301610e83565b509695505050505050565b60008060008060808587031215610ecd57600080fd5b845167ffffffffffffffff80821115610ee557600080fd5b818701915087601f830112610ef957600080fd5b81516020610f09610e5b83610e16565b82815260059290921b8401810191818101908b841115610f2857600080fd5b948201945b83861015610f4f578551610f4081610c08565b82529482019490820190610f2d565b918a0151919850909350505080821115610f6857600080fd5b50610f7587828801610e3a565b604087015160609097015195989097509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610ffc57610ffc610fbb565b500390565b60008451611013818460208901610d22565b60e89490941b7fffffff0000000000000000000000000000000000000000000000000000000000169190930190815260609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016600382015260170192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110a9576110a9610fbb565b5060010190565b600082198211156110c3576110c3610fbb565b500190565b602081526000825160a060208401526110e460c0840182610d4e565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b60006020828403121561114057600080fd5b8151801515811461115057600080fd5b9392505050565b6020815260006111506020830184610d4e56fea264697066735822122093b2f0d631501d242ccc3b37794fbbd58c91360bd452289fa4e2d998f2394d5464736f6c634300080f0033",
    "sourceMap": "564:4836:39:-:0;;;894:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;951:34:39;;;564:4836;;14:316:42;110:6;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;205:16;;-1:-1:-1;;;;;250:31:42;;240:42;;230:70;;296:1;293;286:12;230:70;319:5;14:316;-1:-1:-1;;;14:316:42:o;:::-;564:4836:39;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063299ae48a146100465780632c76d7a61461006c5780639d453f8d146100b8575b600080fd5b610059610054366004610c3d565b6100cb565b6040519081526020015b60405180910390f35b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610063565b6100596100c6366004610c3d565b61023a565b60008060003073ffffffffffffffffffffffffffffffffffffffff16639d453f8d60e01b888888886040516024016101069493929190610d98565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161018f9190610de1565b600060405180830381855af49150503d80600081146101ca576040519150601f19603f3d011682016040523d82523d6000602084013e6101cf565b606091505b50915091508161021b578051156101e95780518082602001fd5b6040517f8e2cf9de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080602001905181019061022f9190610dfd565b979650505050505050565b6000806000806000888060200190518101906102569190610eb7565b93509350935093508360008151811061027157610271610f8c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461032657836000815181106102be576102be610f8c565b6020026020010151876040517fe539288100000000000000000000000000000000000000000000000000000000815260040161031d92919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b60405180910390fd5b83600185516103359190610fea565b8151811061034557610345610f8c565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146103fd57836001855161038e9190610fea565b8151811061039e5761039e610f8c565b6020026020010151866040517f47052b6700000000000000000000000000000000000000000000000000000000815260040161031d92919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b61041f73ffffffffffffffffffffffffffffffffffffffff8816333085610616565b61046073ffffffffffffffffffffffffffffffffffffffff88167f0000000000000000000000000000000000000000000000000000000000000000846106f8565b60408051606089901b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015281516014818303018152603490910190915260015b85518110156105235781856104bb600184610fea565b815181106104cb576104cb610f8c565b60200260200101518783815181106104e5576104e5610f8c565b60200260200101516040516020016104ff93929190611001565b6040516020818303038152906040529150808061051b90611078565b9150506104a5565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c04b8d596040518060a001604052808481526020018c73ffffffffffffffffffffffffffffffffffffffff16815260200142603c61059a91906110b0565b8152602001868152602001858152506040518263ffffffff1660e01b81526004016105c591906110c8565b6020604051808303816000875af11580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190610dfd565b9a9950505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526106f29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261087f565b50505050565b80158061079857506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190610dfd565b155b610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161031d565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261087a9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610670565b505050565b60006108e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661098b9092919063ffffffff16565b80519091501561087a57808060200190518101906108ff919061112e565b61087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161031d565b606061099a84846000856109a2565b949350505050565b606082471015610a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161031d565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610a5d9190610de1565b60006040518083038185875af1925050503d8060008114610a9a576040519150601f19603f3d011682016040523d82523d6000602084013e610a9f565b606091505b509150915061022f8783838760608315610b41578251600003610b3a5773ffffffffffffffffffffffffffffffffffffffff85163b610b3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161031d565b508161099a565b61099a8383815115610b565781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190611157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c0057610c00610b8a565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c2a57600080fd5b50565b8035610c3881610c08565b919050565b60008060008060808587031215610c5357600080fd5b843567ffffffffffffffff80821115610c6b57600080fd5b818701915087601f830112610c7f57600080fd5b8135602082821115610c9357610c93610b8a565b610cc3817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610bb9565b92508183528981838601011115610cd957600080fd5b81818501828501376000818385010152829750610cf7818a01610c2d565b965050505050610d0960408601610c2d565b9150610d1760608601610c2d565b905092959194509250565b60005b83811015610d3d578181015183820152602001610d25565b838111156106f25750506000910152565b60008151808452610d66816020860160208601610d22565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b608081526000610dab6080830187610d4e565b73ffffffffffffffffffffffffffffffffffffffff95861660208401529385166040830152509216606090920191909152919050565b60008251610df3818460208701610d22565b9190910192915050565b600060208284031215610e0f57600080fd5b5051919050565b600067ffffffffffffffff821115610e3057610e30610b8a565b5060051b60200190565b600082601f830112610e4b57600080fd5b81516020610e60610e5b83610e16565b610bb9565b82815260059290921b84018101918181019086841115610e7f57600080fd5b8286015b84811015610eac57805162ffffff81168114610e9f5760008081fd5b8352918301918301610e83565b509695505050505050565b60008060008060808587031215610ecd57600080fd5b845167ffffffffffffffff80821115610ee557600080fd5b818701915087601f830112610ef957600080fd5b81516020610f09610e5b83610e16565b82815260059290921b8401810191818101908b841115610f2857600080fd5b948201945b83861015610f4f578551610f4081610c08565b82529482019490820190610f2d565b918a0151919850909350505080821115610f6857600080fd5b50610f7587828801610e3a565b604087015160609097015195989097509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610ffc57610ffc610fbb565b500390565b60008451611013818460208901610d22565b60e89490941b7fffffff0000000000000000000000000000000000000000000000000000000000169190930190815260609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016600382015260170192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110a9576110a9610fbb565b5060010190565b600082198211156110c3576110c3610fbb565b500190565b602081526000825160a060208401526110e460c0840182610d4e565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b60006020828403121561114057600080fd5b8151801515811461115057600080fd5b9392505050565b6020815260006111506020830184610d4e56fea264697066735822122093b2f0d631501d242ccc3b37794fbbd58c91360bd452289fa4e2d998f2394d5464736f6c634300080f0033",
    "sourceMap": "564:4836:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:1042;;;;;;:::i;:::-;;:::i;:::-;;;2068:25:42;;;2056:2;2041:18;2070:1042:39;;;;;;;;686:49;;;;;;;;2306:42:42;2294:55;;;2276:74;;2264:2;2249:18;686:49:39;2104:252:42;3719:1679:39;;;;;;:::i;:::-;;:::i;2070:1042::-;2212:17;2309:12;2323:19;2354:4;2346:26;;2426:39;;;2483:8;2509;2535:7;2560:8;2386:196;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:246;;;;2386:196;2346:246;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:284;;;;2608:7;2603:451;;2775:13;;:17;2771:273;;2872:6;2866:13;2924:15;2915:6;2911:2;2907:15;2900:40;2771:273;3003:26;;;;;;;;;;;;;;2771:273;3087:6;3076:29;;;;;;;;;;;;:::i;:::-;3064:41;2070:1042;-1:-1:-1;;;;;;;2070:1042:39:o;3719:1679::-;3868:17;3911:21;3946:24;3984:14;4012:20;4056:8;4045:61;;;;;;;;;;;;:::i;:::-;3897:209;;;;;;;;4195:4;4200:1;4195:7;;;;;;;;:::i;:::-;;;;;;;4178:25;;:7;:25;;;4174:104;;4252:4;4257:1;4252:7;;;;;;;;:::i;:::-;;;;;;;4269;4224:54;;;;;;;;;;;6700:42:42;6769:15;;;6751:34;;6821:15;;6816:2;6801:18;;6794:43;6678:2;6663:18;;6516:327;4224:54:39;;;;;;;;4174:104;4310:4;4329:1;4315:4;:11;:15;;;;:::i;:::-;4310:21;;;;;;;;:::i;:::-;;;;;;;4292:40;;:8;:40;;;4288:181;;4399:4;4418:1;4404:4;:11;:15;;;;:::i;:::-;4399:21;;;;;;;;:::i;:::-;;;;;;;4446:8;4353:116;;;;;;;;;;;6700:42:42;6769:15;;;6751:34;;6821:15;;6816:2;6801:18;;6794:43;6678:2;6663:18;;6516:327;4288:181:39;4533:59;:24;;;4558:10;4578:4;4585:6;4533:24;:59::i;:::-;4663:53;:19;;;4691:15;4709:6;4663:19;:53::i;:::-;4794:34;;;7316:2:42;7312:15;;;7329:66;7308:88;4794:34:39;;;7296:101:42;4794:34:39;;;;;;;;;7413:12:42;;;;4794:34:39;;;4855:1;4838:195;4862:4;:11;4858:1;:15;4838:195;;;4945:16;4979:8;4988:5;4992:1;4988;:5;:::i;:::-;4979:15;;;;;;;;:::i;:::-;;;;;;;5012:4;5017:1;5012:7;;;;;;;;:::i;:::-;;;;;;;4911:122;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4892:141;;4875:3;;;;;:::i;:::-;;;;4838:195;;;;5085:15;:26;;;5125:256;;;;;;;;5183:16;5125:256;;;;5228:8;5125:256;;;;;;5264:15;5282:2;5264:20;;;;:::i;:::-;5125:256;;;;5312:6;5125:256;;;;5354:12;5125:256;;;5085:306;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5073:318;3719:1679;-1:-1:-1;;;;;;;;;;3719:1679:39:o;974:241:30:-;1139:68;;9265:42:42;9334:15;;;1139:68:30;;;9316:34:42;9386:15;;9366:18;;;9359:43;9418:18;;;9411:34;;;1112:96:30;;1132:5;;1162:27;;9228:18:42;;1139:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1475:603::-;1830:10;;;1829:62;;-1:-1:-1;1846:39:30;;;;;1870:4;1846:39;;;6751:34:42;1846:15:30;6821::42;;;6801:18;;;6794:43;1846:15:30;;;;;6663:18:42;;1846:39:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;;;;9658:2:42;1808:163:30;;;9640:21:42;9697:2;9677:18;;;9670:30;9736:34;9716:18;;;9709:62;9807:24;9787:18;;;9780:52;9849:19;;1808:163:30;9456:418:42;1808:163:30;2008:62;;10083:42:42;10071:55;;2008:62:30;;;10053:74:42;10143:18;;;10136:34;;;1981:90:30;;2001:5;;2031:22;;10026:18:42;;2008:62:30;9879:297:42;1981:90:30;1475:603;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:30;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;10665:2:42;4351:85:30;;;10647:21:42;10704:2;10684:18;;;10677:30;10743:34;10723:18;;;10716:62;10814:12;10794:18;;;10787:40;10844:19;;4351:85:30;10463:406:42;3872:223:31;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:31:o;4959:446::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;;;;11076:2:42;5148:81:31;;;11058:21:42;11115:2;11095:18;;;11088:30;11154:34;11134:18;;;11127:62;11225:8;11205:18;;;11198:36;11251:19;;5148:81:31;10874:402:42;5148:81:31;5240:12;5254:23;5281:6;:11;;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;7645;7673:7;7669:418;;;7700:10;:17;7721:1;7700:22;7696:286;;1465:19;;;;7907:60;;;;;;;11483:2:42;7907:60:31;;;11465:21:42;11522:2;11502:18;;;11495:30;11561:31;11541:18;;;11534:59;11610:18;;7907:60:31;11281:353:42;7907:60:31;-1:-1:-1;8002:10:31;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;;;;;;;;;;:::i;14:184:42:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:334;274:2;268:9;330:2;320:13;;335:66;316:86;304:99;;433:18;418:34;;454:22;;;415:62;412:88;;;480:18;;:::i;:::-;516:2;509:22;203:334;;-1:-1:-1;203:334:42:o;542:154::-;628:42;621:5;617:54;610:5;607:65;597:93;;686:1;683;676:12;597:93;542:154;:::o;701:134::-;769:20;;798:31;769:20;798:31;:::i;:::-;701:134;;;:::o;840:1077::-;965:6;973;981;989;1042:3;1030:9;1021:7;1017:23;1013:33;1010:53;;;1059:1;1056;1049:12;1010:53;1099:9;1086:23;1128:18;1169:2;1161:6;1158:14;1155:34;;;1185:1;1182;1175:12;1155:34;1223:6;1212:9;1208:22;1198:32;;1268:7;1261:4;1257:2;1253:13;1249:27;1239:55;;1290:1;1287;1280:12;1239:55;1326:2;1313:16;1348:4;1371:2;1367;1364:10;1361:36;;;1377:18;;:::i;:::-;1419:112;1527:2;1458:66;1451:4;1447:2;1443:13;1439:86;1435:95;1419:112;:::i;:::-;1406:125;;1554:2;1547:5;1540:17;1594:7;1589:2;1584;1580;1576:11;1572:20;1569:33;1566:53;;;1615:1;1612;1605:12;1566:53;1670:2;1665;1661;1657:11;1652:2;1645:5;1641:14;1628:45;1714:1;1709:2;1704;1697:5;1693:14;1689:23;1682:34;1735:5;1725:15;;1759:38;1793:2;1782:9;1778:18;1759:38;:::i;:::-;1749:48;;;;;;1816:38;1850:2;1839:9;1835:18;1816:38;:::i;:::-;1806:48;;1873:38;1907:2;1896:9;1892:18;1873:38;:::i;:::-;1863:48;;840:1077;;;;;;;:::o;2361:258::-;2433:1;2443:113;2457:6;2454:1;2451:13;2443:113;;;2533:11;;;2527:18;2514:11;;;2507:39;2479:2;2472:10;2443:113;;;2574:6;2571:1;2568:13;2565:48;;;-1:-1:-1;;2609:1:42;2591:16;;2584:27;2361:258::o;2624:316::-;2665:3;2703:5;2697:12;2730:6;2725:3;2718:19;2746:63;2802:6;2795:4;2790:3;2786:14;2779:4;2772:5;2768:16;2746:63;:::i;:::-;2854:2;2842:15;2859:66;2838:88;2829:98;;;;2929:4;2825:109;;2624:316;-1:-1:-1;;2624:316:42:o;2945:550::-;3206:3;3195:9;3188:22;3169:4;3227:45;3267:3;3256:9;3252:19;3244:6;3227:45;:::i;:::-;3291:42;3369:15;;;3364:2;3349:18;;3342:43;3421:15;;;3416:2;3401:18;;3394:43;-1:-1:-1;3473:15:42;;3468:2;3453:18;;;3446:43;;;;3219:53;2945:550;-1:-1:-1;2945:550:42:o;3500:274::-;3629:3;3667:6;3661:13;3683:53;3729:6;3724:3;3717:4;3709:6;3705:17;3683:53;:::i;:::-;3752:16;;;;;3500:274;-1:-1:-1;;3500:274:42:o;3779:184::-;3849:6;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;-1:-1:-1;3941:16:42;;3779:184;-1:-1:-1;3779:184:42:o;3968:183::-;4028:4;4061:18;4053:6;4050:30;4047:56;;;4083:18;;:::i;:::-;-1:-1:-1;4128:1:42;4124:14;4140:4;4120:25;;3968:183::o;4156:831::-;4220:5;4273:3;4266:4;4258:6;4254:17;4250:27;4240:55;;4291:1;4288;4281:12;4240:55;4320:6;4314:13;4346:4;4370:60;4386:43;4426:2;4386:43;:::i;:::-;4370:60;:::i;:::-;4464:15;;;4550:1;4546:10;;;;4534:23;;4530:32;;;4495:12;;;;4574:15;;;4571:35;;;4602:1;4599;4592:12;4571:35;4638:2;4630:6;4626:15;4650:308;4666:6;4661:3;4658:15;4650:308;;;4739:3;4733:10;4787:8;4780:5;4776:20;4769:5;4766:31;4756:129;;4839:1;4868:2;4864;4857:14;4756:129;4898:18;;4936:12;;;;4683;;4650:308;;;-1:-1:-1;4976:5:42;4156:831;-1:-1:-1;;;;;;4156:831:42:o;4992:1330::-;5138:6;5146;5154;5162;5215:3;5203:9;5194:7;5190:23;5186:33;5183:53;;;5232:1;5229;5222:12;5183:53;5265:9;5259:16;5294:18;5335:2;5327:6;5324:14;5321:34;;;5351:1;5348;5341:12;5321:34;5389:6;5378:9;5374:22;5364:32;;5434:7;5427:4;5423:2;5419:13;5415:27;5405:55;;5456:1;5453;5446:12;5405:55;5485:2;5479:9;5507:4;5531:60;5547:43;5587:2;5547:43;:::i;5531:60::-;5625:15;;;5707:1;5703:10;;;;5695:19;;5691:28;;;5656:12;;;;5731:19;;;5728:39;;;5763:1;5760;5753:12;5728:39;5787:11;;;;5807:210;5823:6;5818:3;5815:15;5807:210;;;5896:3;5890:10;5913:31;5938:5;5913:31;:::i;:::-;5957:18;;5840:12;;;;5995;;;;5807:210;;;6072:18;;;6066:25;6036:5;;-1:-1:-1;6066:25:42;;-1:-1:-1;;;6103:16:42;;;6100:36;;;6132:1;6129;6122:12;6100:36;;6155:73;6220:7;6209:8;6198:9;6194:24;6155:73;:::i;:::-;6268:2;6253:18;;6247:25;6312:2;6297:18;;;6291:25;4992:1330;;6145:83;;-1:-1:-1;4992:1330:42;-1:-1:-1;;;;4992:1330:42:o;6327:184::-;6379:77;6376:1;6369:88;6476:4;6473:1;6466:15;6500:4;6497:1;6490:15;6848:184;6900:77;6897:1;6890:88;6997:4;6994:1;6987:15;7021:4;7018:1;7011:15;7037:125;7077:4;7105:1;7102;7099:8;7096:34;;;7110:18;;:::i;:::-;-1:-1:-1;7147:9:42;;7037:125::o;7436:597::-;7619:3;7657:6;7651:13;7673:53;7719:6;7714:3;7707:4;7699:6;7695:17;7673:53;:::i;:::-;7795:3;7791:16;;;;7809:66;7787:89;7748:16;;;;7773:104;;;7916:2;7912:15;;;;7929:66;7908:88;7904:1;7893:13;;7886:111;8024:2;8013:14;;7436:597;-1:-1:-1;;7436:597:42:o;8038:195::-;8077:3;8108:66;8101:5;8098:77;8095:103;;8178:18;;:::i;:::-;-1:-1:-1;8225:1:42;8214:13;;8038:195::o;8238:128::-;8278:3;8309:1;8305:6;8302:1;8299:13;8296:39;;;8315:18;;:::i;:::-;-1:-1:-1;8351:9:42;;8238:128::o;8371:677::-;8570:2;8559:9;8552:21;8533:4;8608:6;8602:13;8651:4;8646:2;8635:9;8631:18;8624:32;8679:51;8725:3;8714:9;8710:19;8696:12;8679:51;:::i;:::-;8665:65;;8794:42;8788:2;8780:6;8776:15;8770:22;8766:71;8761:2;8750:9;8746:18;8739:99;8892:2;8884:6;8880:15;8874:22;8869:2;8858:9;8854:18;8847:50;8952:2;8944:6;8940:15;8934:22;8928:3;8917:9;8913:19;8906:51;9013:3;9005:6;9001:16;8995:23;8988:4;8977:9;8973:20;8966:53;9036:6;9028:14;;;8371:677;;;;:::o;10181:277::-;10248:6;10301:2;10289:9;10280:7;10276:23;10272:32;10269:52;;;10317:1;10314;10307:12;10269:52;10349:9;10343:16;10402:5;10395:13;10388:21;10381:5;10378:32;10368:60;;10424:1;10421;10414:12;10368:60;10447:5;10181:277;-1:-1:-1;;;10181:277:42:o;11639:219::-;11788:2;11777:9;11770:21;11751:4;11808:44;11848:2;11837:9;11833:18;11825:6;11808:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "28376": [
        {
          "start": 113,
          "length": 32
        },
        {
          "start": 1083,
          "length": 32
        },
        {
          "start": 1318,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "swap(bytes,address,address,address)": "299ae48a",
    "swapWithUniV3(bytes,address,address,address)": "9d453f8d",
    "uniswapV3Router()": "2c76d7a6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IUniswapV3Router\",\"name\":\"_uniswapV3Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"SwapRouter__AssetInMisMatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"SwapRouter__AssetOutMisMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapRouter__SwapReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"swapData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"assetOut\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"swapData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"assetOut\",\"type\":\"address\"}],\"name\":\"swapWithUniV3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crispymangoes, Brian Le\",\"details\":\"Perform multiple swaps using Multicall.\",\"errors\":{\"SwapRouter__AssetInMisMatch(address,address)\":[{\"params\":{\"actual\":\"the address encoded into the swap data\",\"expected\":\"the address passed in with assetIn\"}}],\"SwapRouter__AssetOutMisMatch(address,address)\":[{\"params\":{\"actual\":\"the address encoded into the swap data\",\"expected\":\"the address passed in with assetIn\"}}]},\"kind\":\"dev\",\"methods\":{\"swap(bytes,address,address,address)\":{\"params\":{\"receiver\":\"address to send the received assets to\",\"swapData\":\"encoded data used for the swap\"},\"returns\":{\"amountOut\":\"amount of assets received from the swap\"}},\"swapWithUniV3(bytes,address,address,address)\":{\"params\":{\"receiver\":\"address to send the received assets to\",\"swapData\":\"bytes variable storing the following swap information      address[] path: array of addresses dictating what swap path to follow      uint24[] poolFees: array of pool fees dictating what swap pools to use      uint256 amount: amount of the first asset in the path to swap      uint256 amountOutMin: the minimum amount of the last asset in the path to receive\"},\"returns\":{\"amountOut\":\"amount of assets received from the swap\"}}},\"title\":\"Sommelier Swap Router\",\"version\":1},\"userdoc\":{\"errors\":{\"SwapRouter__AssetInMisMatch(address,address)\":[{\"notice\":\"Attempted to perform a swap with mismatched assetIn and swap data.\"}],\"SwapRouter__AssetOutMisMatch(address,address)\":[{\"notice\":\"Attempted to perform a swap with mismatched assetOut and swap data.\"}],\"SwapRouter__SwapReverted()\":[{\"notice\":\"Attempted to perform a swap that reverted without a message.\"}]},\"kind\":\"user\",\"methods\":{\"swap(bytes,address,address,address)\":{\"notice\":\"Perform a swap using a supported exchange.\"},\"swapWithUniV3(bytes,address,address,address)\":{\"notice\":\"Perform a swap using Uniswap V3.\"},\"uniswapV3Router()\":{\"notice\":\"Uniswap V3 swap router contract.\"}},\"notice\":\"Provides a universal interface allowing Sommelier contracts to interact with multiple         different exchanges to perform swaps.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/SwapRouter.sol\":\"SwapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@aave/=lib/aave-v3-core/\",\":@chainlink/=lib/cellar-contracts/lib/chainlink/\",\":@clones/=lib/clones-with-immutable-args/src/\",\":@connext/nxtp-contracts/contracts/=lib/nxtp/packages/deployments/contracts/contracts/\",\":@ds-test/=lib/cellar-contracts/lib/forge-std/lib/ds-test/src/\",\":@ds/=lib/ds-test/src/\",\":@forge-std/=lib/cellar-contracts/lib/forge-std/src/\",\":@hardhat/=lib/hardhat/\",\":@openzeppelin/contracts-upgradeable/=lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solmate/=lib/cellar-contracts/lib/solmate/src/\",\":@solmate/=lib/solmate/src/\",\":@std/=lib/forge-std/src/\",\":@uniswap/v3-core/=lib/cellar-contracts/lib/v3-core/\",\":@uniswap/v3-periphery/=lib/cellar-contracts/lib/v3-periphery/\",\":@uniswapV3C/=lib/cellar-contracts/lib/v3-core.git/contracts/\",\":@uniswapV3P/=lib/cellar-contracts/lib/v3-periphery.git/contracts/\",\":cellar-contracts/=lib/cellar-contracts/src/\",\":cellar/=lib/cellar-contracts/\",\":chainlink/=lib/cellar-contracts/lib/chainlink/contracts/src/v0.8/dev/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":nxtp/=lib/nxtp/packages/deployments/contracts/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":v3-core.git/=lib/cellar-contracts/lib/v3-core.git/contracts/\",\":v3-periphery.git/=lib/cellar-contracts/lib/v3-periphery.git/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71\",\"dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/contracts/SwapRouter.sol\":{\"keccak256\":\"0xcc0a54f4ad1bc2acdd4f542b804ac9b305f6b4fc49b1f09323ab685346551a6b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8624b21c8c209cedbf54474f302493fc40c05b6ee9f752e2b2f0e7a14cdf1112\",\"dweb:/ipfs/QmXdWdYNy6vdnvUDS7oZmUBV8UZKKTS1GGLHMdWunALcAL\"]},\"src/contracts/interfaces/external/IUniswapV3Router.sol\":{\"keccak256\":\"0x1984c132d64a350db3970059c540d2d6d46a4fa97952da05403b16714dd04b8a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://18e18fdd4af92de9c615a498feaa4c30a506622d335d21f2b1c38b1be786c77a\",\"dweb:/ipfs/QmYhsfatr69tFeoxx3fihmfk1YPFn2kzHCHNqdwpWkcRgu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IUniswapV3Router",
              "name": "_uniswapV3Router",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "actual",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expected",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SwapRouter__AssetInMisMatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "actual",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expected",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SwapRouter__AssetOutMisMatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapRouter__SwapReverted"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "swapData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "assetOut",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "swapData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "assetOut",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapWithUniV3",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapV3Router",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Router",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "swap(bytes,address,address,address)": {
            "params": {
              "receiver": "address to send the received assets to",
              "swapData": "encoded data used for the swap"
            },
            "returns": {
              "amountOut": "amount of assets received from the swap"
            }
          },
          "swapWithUniV3(bytes,address,address,address)": {
            "params": {
              "receiver": "address to send the received assets to",
              "swapData": "bytes variable storing the following swap information      address[] path: array of addresses dictating what swap path to follow      uint24[] poolFees: array of pool fees dictating what swap pools to use      uint256 amount: amount of the first asset in the path to swap      uint256 amountOutMin: the minimum amount of the last asset in the path to receive"
            },
            "returns": {
              "amountOut": "amount of assets received from the swap"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "swap(bytes,address,address,address)": {
            "notice": "Perform a swap using a supported exchange."
          },
          "swapWithUniV3(bytes,address,address,address)": {
            "notice": "Perform a swap using Uniswap V3."
          },
          "uniswapV3Router()": {
            "notice": "Uniswap V3 swap router contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@aave/=lib/aave-v3-core/",
        ":@chainlink/=lib/cellar-contracts/lib/chainlink/",
        ":@clones/=lib/clones-with-immutable-args/src/",
        ":@connext/nxtp-contracts/contracts/=lib/nxtp/packages/deployments/contracts/contracts/",
        ":@ds-test/=lib/cellar-contracts/lib/forge-std/lib/ds-test/src/",
        ":@ds/=lib/ds-test/src/",
        ":@forge-std/=lib/cellar-contracts/lib/forge-std/src/",
        ":@hardhat/=lib/hardhat/",
        ":@openzeppelin/contracts-upgradeable/=lib/nxtp/packages/deployments/contracts/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@solmate/=lib/cellar-contracts/lib/solmate/src/",
        ":@solmate/=lib/solmate/src/",
        ":@std/=lib/forge-std/src/",
        ":@uniswap/v3-core/=lib/cellar-contracts/lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/cellar-contracts/lib/v3-periphery/",
        ":@uniswapV3C/=lib/cellar-contracts/lib/v3-core.git/contracts/",
        ":@uniswapV3P/=lib/cellar-contracts/lib/v3-periphery.git/contracts/",
        ":cellar-contracts/=lib/cellar-contracts/src/",
        ":cellar/=lib/cellar-contracts/",
        ":chainlink/=lib/cellar-contracts/lib/chainlink/contracts/src/v0.8/dev/vendor/@arbitrum/nitro-contracts/src/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":nxtp/=lib/nxtp/packages/deployments/contracts/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":v3-core.git/=lib/cellar-contracts/lib/v3-core.git/contracts/",
        ":v3-periphery.git/=lib/cellar-contracts/lib/v3-periphery.git/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/SwapRouter.sol": "SwapRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8f211a9dd6bc7e4bc6c98a062d4729b821b7ff391a888215a48872b205117749",
        "urls": [
          "bzz-raw://2c537063217d09afbe820ec9fd448835862209cc54b4f8ef3e8e33a1b3e25b71",
          "dweb:/ipfs/QmeBegWuZR66Xbqzczhuoh9N11zBkyftXxYHNys3xHkC7P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/contracts/SwapRouter.sol": {
        "keccak256": "0xcc0a54f4ad1bc2acdd4f542b804ac9b305f6b4fc49b1f09323ab685346551a6b",
        "urls": [
          "bzz-raw://8624b21c8c209cedbf54474f302493fc40c05b6ee9f752e2b2f0e7a14cdf1112",
          "dweb:/ipfs/QmXdWdYNy6vdnvUDS7oZmUBV8UZKKTS1GGLHMdWunALcAL"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/external/IUniswapV3Router.sol": {
        "keccak256": "0x1984c132d64a350db3970059c540d2d6d46a4fa97952da05403b16714dd04b8a",
        "urls": [
          "bzz-raw://18e18fdd4af92de9c615a498feaa4c30a506622d335d21f2b1c38b1be786c77a",
          "dweb:/ipfs/QmYhsfatr69tFeoxx3fihmfk1YPFn2kzHCHNqdwpWkcRgu"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/SwapRouter.sol",
    "id": 28634,
    "exportedSymbols": {
      "ERC20": [
        27180
      ],
      "IUniswapV3Router": [
        29003
      ],
      "SafeERC20": [
        27600
      ],
      "SwapRouter": [
        28633
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:5361:39",
    "nodes": [
      {
        "id": 28361,
        "nodeType": "PragmaDirective",
        "src": "39:24:39",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ]
      },
      {
        "id": 28363,
        "nodeType": "ImportDirective",
        "src": "65:68:39",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28634,
        "sourceUnit": 27181,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28362,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27180,
              "src": "73:5:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28365,
        "nodeType": "ImportDirective",
        "src": "134:82:39",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28634,
        "sourceUnit": 27601,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28364,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27600,
              "src": "142:9:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28367,
        "nodeType": "ImportDirective",
        "src": "217:76:39",
        "absolutePath": "src/contracts/interfaces/external/IUniswapV3Router.sol",
        "file": "./interfaces/external/IUniswapV3Router.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28634,
        "sourceUnit": 29004,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28366,
              "name": "IUniswapV3Router",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29003,
              "src": "225:16:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28633,
        "nodeType": "ContractDefinition",
        "src": "564:4836:39",
        "nodes": [
          {
            "id": 28372,
            "nodeType": "UsingForDirective",
            "src": "590:26:39",
            "global": false,
            "libraryName": {
              "id": 28369,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27600,
              "src": "596:9:39"
            },
            "typeName": {
              "id": 28371,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28370,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27180,
                "src": "610:5:39"
              },
              "referencedDeclaration": 27180,
              "src": "610:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$27180",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 28376,
            "nodeType": "VariableDeclaration",
            "src": "686:49:39",
            "constant": false,
            "documentation": {
              "id": 28373,
              "nodeType": "StructuredDocumentation",
              "src": "622:59:39",
              "text": " @notice Uniswap V3 swap router contract."
            },
            "functionSelector": "2c76d7a6",
            "mutability": "immutable",
            "name": "uniswapV3Router",
            "nameLocation": "720:15:39",
            "scope": 28633,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
              "typeString": "contract IUniswapV3Router"
            },
            "typeName": {
              "id": 28375,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28374,
                "name": "IUniswapV3Router",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29003,
                "src": "686:16:39"
              },
              "referencedDeclaration": 29003,
              "src": "686:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                "typeString": "contract IUniswapV3Router"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28387,
            "nodeType": "FunctionDefinition",
            "src": "894:98:39",
            "body": {
              "id": 28386,
              "nodeType": "Block",
              "src": "941:51:39",
              "statements": [
                {
                  "expression": {
                    "id": 28384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28382,
                      "name": "uniswapV3Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28376,
                      "src": "951:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                        "typeString": "contract IUniswapV3Router"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28383,
                      "name": "_uniswapV3Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28379,
                      "src": "969:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                        "typeString": "contract IUniswapV3Router"
                      }
                    },
                    "src": "951:34:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                      "typeString": "contract IUniswapV3Router"
                    }
                  },
                  "id": 28385,
                  "nodeType": "ExpressionStatement",
                  "src": "951:34:39"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28379,
                  "mutability": "mutable",
                  "name": "_uniswapV3Router",
                  "nameLocation": "923:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28387,
                  "src": "906:33:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                    "typeString": "contract IUniswapV3Router"
                  },
                  "typeName": {
                    "id": 28378,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28377,
                      "name": "IUniswapV3Router",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29003,
                      "src": "906:16:39"
                    },
                    "referencedDeclaration": 29003,
                    "src": "906:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                      "typeString": "contract IUniswapV3Router"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:35:39"
            },
            "returnParameters": {
              "id": 28381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "941:0:39"
            },
            "scope": 28633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28390,
            "nodeType": "ErrorDefinition",
            "src": "1194:33:39",
            "documentation": {
              "id": 28388,
              "nodeType": "StructuredDocumentation",
              "src": "1102:87:39",
              "text": " @notice Attempted to perform a swap that reverted without a message."
            },
            "errorSelector": "8e2cf9de",
            "name": "SwapRouter__SwapReverted",
            "nameLocation": "1200:24:39",
            "parameters": {
              "id": 28389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:2:39"
            }
          },
          {
            "id": 28397,
            "nodeType": "ErrorDefinition",
            "src": "1449:68:39",
            "documentation": {
              "id": 28391,
              "nodeType": "StructuredDocumentation",
              "src": "1233:211:39",
              "text": " @notice Attempted to perform a swap with mismatched assetIn and swap data.\n @param actual the address encoded into the swap data\n @param expected the address passed in with assetIn"
            },
            "errorSelector": "e5392881",
            "name": "SwapRouter__AssetInMisMatch",
            "nameLocation": "1455:27:39",
            "parameters": {
              "id": 28396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28393,
                  "mutability": "mutable",
                  "name": "actual",
                  "nameLocation": "1491:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28397,
                  "src": "1483:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28395,
                  "mutability": "mutable",
                  "name": "expected",
                  "nameLocation": "1507:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28397,
                  "src": "1499:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1482:34:39"
            }
          },
          {
            "id": 28404,
            "nodeType": "ErrorDefinition",
            "src": "1740:69:39",
            "documentation": {
              "id": 28398,
              "nodeType": "StructuredDocumentation",
              "src": "1523:212:39",
              "text": " @notice Attempted to perform a swap with mismatched assetOut and swap data.\n @param actual the address encoded into the swap data\n @param expected the address passed in with assetIn"
            },
            "errorSelector": "47052b67",
            "name": "SwapRouter__AssetOutMisMatch",
            "nameLocation": "1746:28:39",
            "parameters": {
              "id": 28403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28400,
                  "mutability": "mutable",
                  "name": "actual",
                  "nameLocation": "1783:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28404,
                  "src": "1775:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28402,
                  "mutability": "mutable",
                  "name": "expected",
                  "nameLocation": "1799:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28404,
                  "src": "1791:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1774:34:39"
            }
          },
          {
            "id": 28469,
            "nodeType": "FunctionDefinition",
            "src": "2070:1042:39",
            "body": {
              "id": 28468,
              "nodeType": "Block",
              "src": "2231:881:39",
              "statements": [
                {
                  "assignments": [
                    28421,
                    28423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28421,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2314:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28468,
                      "src": "2309:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 28420,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 28423,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2336:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28468,
                      "src": "2323:19:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 28422,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2323:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28442,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 28432,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2437:4:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SwapRouter_$28633",
                                      "typeString": "contract SwapRouter"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwapRouter_$28633",
                                      "typeString": "contract SwapRouter"
                                    }
                                  ],
                                  "id": 28431,
                                  "name": "SwapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28633,
                                  "src": "2426:10:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SwapRouter_$28633_$",
                                    "typeString": "type(contract SwapRouter)"
                                  }
                                },
                                "id": 28433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2426:16:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$28633",
                                  "typeString": "contract SwapRouter"
                                }
                              },
                              "id": 28434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "swapWithUniV3",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28632,
                              "src": "2426:30:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_contract$_ERC20_$27180_$_t_contract$_ERC20_$27180_$returns$_t_uint256_$",
                                "typeString": "function (bytes memory,address,contract ERC20,contract ERC20) external returns (uint256)"
                              }
                            },
                            "id": 28435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2426:39:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 28436,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28407,
                            "src": "2483:8:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 28437,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28409,
                            "src": "2509:8:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 28438,
                            "name": "assetIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28412,
                            "src": "2535:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$27180",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "id": 28439,
                            "name": "assetOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28415,
                            "src": "2560:8:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$27180",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$27180",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$27180",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "expression": {
                            "id": 28429,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2386:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 28430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2386:22:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 28440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2386:196:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 28426,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2354:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$28633",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$28633",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 28425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2346:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2346:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2346:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 28428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2346:26:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 28441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2346:246:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2308:284:39"
                },
                {
                  "condition": {
                    "id": 28444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2607:8:39",
                    "subExpression": {
                      "id": 28443,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28421,
                      "src": "2608:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28457,
                  "nodeType": "IfStatement",
                  "src": "2603:451:39",
                  "trueBody": {
                    "id": 28456,
                    "nodeType": "Block",
                    "src": "2617:437:39",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 28448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 28445,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28423,
                              "src": "2775:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 28446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2775:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 28447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2791:1:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2775:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 28454,
                          "nodeType": "Block",
                          "src": "2978:66:39",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 28451,
                                  "name": "SwapRouter__SwapReverted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28390,
                                  "src": "3003:24:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 28452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3003:26:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 28453,
                              "nodeType": "RevertStatement",
                              "src": "2996:33:39"
                            }
                          ]
                        },
                        "id": 28455,
                        "nodeType": "IfStatement",
                        "src": "2771:273:39",
                        "trueBody": {
                          "id": 28450,
                          "nodeType": "Block",
                          "src": "2794:178:39",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "2821:137:39",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2843:36:39",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "result",
                                          "nodeType": "YulIdentifier",
                                          "src": "2872:6:39"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2866:5:39"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2866:13:39"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "2847:15:39",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2911:2:39",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "result",
                                              "nodeType": "YulIdentifier",
                                              "src": "2915:6:39"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2907:3:39"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2907:15:39"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "2924:15:39"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2900:6:39"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2900:40:39"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2900:40:39"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 28423,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2872:6:39",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 28423,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2915:6:39",
                                  "valueSize": 1
                                }
                              ],
                              "id": 28449,
                              "nodeType": "InlineAssembly",
                              "src": "2812:146:39"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 28466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28458,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28418,
                      "src": "3064:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28461,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28423,
                          "src": "3087:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 28463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3096:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 28462,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3096:7:39",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 28464,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3095:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 28459,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3076:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "3076:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 28465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3076:29:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3064:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28467,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:41:39"
                }
              ]
            },
            "documentation": {
              "id": 28405,
              "nodeType": "StructuredDocumentation",
              "src": "1815:250:39",
              "text": " @notice Perform a swap using a supported exchange.\n @param swapData encoded data used for the swap\n @param receiver address to send the received assets to\n @return amountOut amount of assets received from the swap"
            },
            "functionSelector": "299ae48a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "2079:4:39",
            "parameters": {
              "id": 28416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28407,
                  "mutability": "mutable",
                  "name": "swapData",
                  "nameLocation": "2106:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28469,
                  "src": "2093:21:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28406,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28409,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2132:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28469,
                  "src": "2124:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28412,
                  "mutability": "mutable",
                  "name": "assetIn",
                  "nameLocation": "2156:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28469,
                  "src": "2150:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$27180",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 28411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28410,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27180,
                      "src": "2150:5:39"
                    },
                    "referencedDeclaration": 27180,
                    "src": "2150:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$27180",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28415,
                  "mutability": "mutable",
                  "name": "assetOut",
                  "nameLocation": "2179:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28469,
                  "src": "2173:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$27180",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 28414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28413,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27180,
                      "src": "2173:5:39"
                    },
                    "referencedDeclaration": 27180,
                    "src": "2173:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$27180",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2083:110:39"
            },
            "returnParameters": {
              "id": 28419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28418,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2220:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28469,
                  "src": "2212:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2211:19:39"
            },
            "scope": 28633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28632,
            "nodeType": "FunctionDefinition",
            "src": "3719:1679:39",
            "body": {
              "id": 28631,
              "nodeType": "Block",
              "src": "3887:1511:39",
              "statements": [
                {
                  "assignments": [
                    28489,
                    28492,
                    28494,
                    28496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28489,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "3928:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28631,
                      "src": "3911:21:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 28487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 28488,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 28492,
                      "mutability": "mutable",
                      "name": "poolFees",
                      "nameLocation": "3962:8:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28631,
                      "src": "3946:24:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                        "typeString": "uint24[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 28490,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3946:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 28491,
                        "nodeType": "ArrayTypeName",
                        "src": "3946:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint24_$dyn_storage_ptr",
                          "typeString": "uint24[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 28494,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3992:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28631,
                      "src": "3984:14:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28493,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3984:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 28496,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "nameLocation": "4020:12:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28631,
                      "src": "4012:20:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4012:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28512,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 28499,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28472,
                        "src": "4056:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 28501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4067:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 28500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4067:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 28502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4067:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 28504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4078:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint24_$",
                                "typeString": "type(uint24)"
                              },
                              "typeName": {
                                "id": 28503,
                                "name": "uint24",
                                "nodeType": "ElementaryTypeName",
                                "src": "4078:6:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 28505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4078:8:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_uint24_$dyn_memory_ptr_$",
                              "typeString": "type(uint24[] memory)"
                            }
                          },
                          {
                            "id": 28507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4088:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 28506,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4088:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 28509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4097:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 28508,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4097:7:39",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 28510,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4066:39:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint24_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address[] memory),type(uint24[] memory),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint24_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address[] memory),type(uint24[] memory),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 28497,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4045:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 28498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4045:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 28511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4045:61:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint24_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address[] memory,uint24[] memory,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3897:209:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$27180",
                      "typeString": "contract ERC20"
                    },
                    "id": 28519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28513,
                      "name": "assetIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28477,
                      "src": "4178:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$27180",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 28515,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28489,
                            "src": "4195:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 28517,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 28516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4200:1:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4195:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28514,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27180,
                        "src": "4189:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$27180_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 28518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4189:14:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$27180",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "4178:25:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28530,
                  "nodeType": "IfStatement",
                  "src": "4174:104:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 28521,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28489,
                            "src": "4252:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 28523,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 28522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4257:1:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4252:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 28526,
                              "name": "assetIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28477,
                              "src": "4269:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$27180",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$27180",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 28525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4261:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28524,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4261:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28520,
                        "name": "SwapRouter__AssetInMisMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28397,
                        "src": "4224:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address) pure"
                        }
                      },
                      "id": 28528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4224:54:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28529,
                    "nodeType": "RevertStatement",
                    "src": "4217:61:39"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$27180",
                      "typeString": "contract ERC20"
                    },
                    "id": 28540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28531,
                      "name": "assetOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28480,
                      "src": "4292:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$27180",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 28533,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28489,
                            "src": "4310:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 28538,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 28537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 28534,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28489,
                                "src": "4315:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 28535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4315:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 28536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4329:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4315:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28532,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27180,
                        "src": "4304:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$27180_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 28539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4304:28:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$27180",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "4292:40:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28554,
                  "nodeType": "IfStatement",
                  "src": "4288:181:39",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 28542,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28489,
                            "src": "4399:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 28547,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 28546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 28543,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28489,
                                "src": "4404:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 28544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4404:11:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 28545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4418:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4404:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4399:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 28550,
                              "name": "assetOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28480,
                              "src": "4446:8:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$27180",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$27180",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 28549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4438:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28548,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4438:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4438:17:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28541,
                        "name": "SwapRouter__AssetOutMisMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28404,
                        "src": "4353:28:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address) pure"
                        }
                      },
                      "id": 28552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4353:116:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28553,
                    "nodeType": "RevertStatement",
                    "src": "4346:123:39"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28558,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4558:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4558:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28562,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4578:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$28633",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$28633",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 28561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4570:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4570:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4570:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28564,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28494,
                        "src": "4585:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28555,
                        "name": "assetIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28477,
                        "src": "4533:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$27180",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27377,
                      "src": "4533:24:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27258_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27258_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 28565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:59:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28566,
                  "nodeType": "ExpressionStatement",
                  "src": "4533:59:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28572,
                            "name": "uniswapV3Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28376,
                            "src": "4691:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                              "typeString": "contract IUniswapV3Router"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                              "typeString": "contract IUniswapV3Router"
                            }
                          ],
                          "id": 28571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4683:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28570,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4683:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4683:24:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28574,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28494,
                        "src": "4709:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28567,
                        "name": "assetIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28477,
                        "src": "4663:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$27180",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 28569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27421,
                      "src": "4663:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$27258_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$27258_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 28575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4663:53:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28576,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:53:39"
                },
                {
                  "assignments": [
                    28578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28578,
                      "mutability": "mutable",
                      "name": "encodePackedPath",
                      "nameLocation": "4775:16:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 28631,
                      "src": "4762:29:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 28577,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4762:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28586,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28583,
                            "name": "assetIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28477,
                            "src": "4819:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$27180",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$27180",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 28582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4811:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4811:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4811:16:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 28579,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4794:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 28580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4794:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 28585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4794:34:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4762:66:39"
                },
                {
                  "body": {
                    "expression": {
                      "id": 28611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 28598,
                        "name": "encodePackedPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28578,
                        "src": "4892:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 28601,
                            "name": "encodePackedPath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28578,
                            "src": "4945:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 28602,
                              "name": "poolFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28492,
                              "src": "4979:8:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint24_$dyn_memory_ptr",
                                "typeString": "uint24[] memory"
                              }
                            },
                            "id": 28606,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 28605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 28603,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28588,
                                "src": "4988:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 28604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4992:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4988:5:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4979:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 28607,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28489,
                              "src": "5012:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 28609,
                            "indexExpression": {
                              "id": 28608,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28588,
                              "src": "5017:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5012:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28599,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4911:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 28600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4911:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 28610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4911:122:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "src": "4892:141:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 28612,
                    "nodeType": "ExpressionStatement",
                    "src": "4892:141:39"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28591,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28588,
                      "src": "4858:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 28592,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28489,
                        "src": "4862:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 28593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4862:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4858:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28613,
                  "initializationExpression": {
                    "assignments": [
                      28588
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 28588,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4851:1:39",
                        "nodeType": "VariableDeclaration",
                        "scope": 28613,
                        "src": "4843:9:39",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28587,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4843:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 28590,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 28589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4855:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4843:13:39"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 28596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4875:3:39",
                      "subExpression": {
                        "id": 28595,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28588,
                        "src": "4875:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28597,
                    "nodeType": "ExpressionStatement",
                    "src": "4875:3:39"
                  },
                  "nodeType": "ForStatement",
                  "src": "4838:195:39"
                },
                {
                  "expression": {
                    "id": 28629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28614,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28483,
                      "src": "5073:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 28619,
                              "name": "encodePackedPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28578,
                              "src": "5183:16:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 28620,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28474,
                              "src": "5228:8:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 28624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 28621,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5264:5:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 28622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5264:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "3630",
                                "id": 28623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5282:2:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_60_by_1",
                                  "typeString": "int_const 60"
                                },
                                "value": "60"
                              },
                              "src": "5264:20:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 28625,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28494,
                              "src": "5312:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 28626,
                              "name": "amountOutMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28496,
                              "src": "5354:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 28617,
                              "name": "IUniswapV3Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29003,
                              "src": "5125:16:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Router_$29003_$",
                                "typeString": "type(contract IUniswapV3Router)"
                              }
                            },
                            "id": 28618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ExactInputParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28947,
                            "src": "5125:33:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactInputParams_$28947_storage_ptr_$",
                              "typeString": "type(struct IUniswapV3Router.ExactInputParams storage pointer)"
                            }
                          },
                          "id": 28627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "recipient",
                            "deadline",
                            "amountIn",
                            "amountOutMinimum"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "5125:256:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputParams_$28947_memory_ptr",
                            "typeString": "struct IUniswapV3Router.ExactInputParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactInputParams_$28947_memory_ptr",
                            "typeString": "struct IUniswapV3Router.ExactInputParams memory"
                          }
                        ],
                        "expression": {
                          "id": 28615,
                          "name": "uniswapV3Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28376,
                          "src": "5085:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Router_$29003",
                            "typeString": "contract IUniswapV3Router"
                          }
                        },
                        "id": 28616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactInput",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28956,
                        "src": "5085:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$28947_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct IUniswapV3Router.ExactInputParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 28628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5085:306:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5073:318:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28630,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:318:39"
                }
              ]
            },
            "documentation": {
              "id": 28470,
              "nodeType": "StructuredDocumentation",
              "src": "3118:596:39",
              "text": " @notice Perform a swap using Uniswap V3.\n @param swapData bytes variable storing the following swap information\n      address[] path: array of addresses dictating what swap path to follow\n      uint24[] poolFees: array of pool fees dictating what swap pools to use\n      uint256 amount: amount of the first asset in the path to swap\n      uint256 amountOutMin: the minimum amount of the last asset in the path to receive\n @param receiver address to send the received assets to\n @return amountOut amount of assets received from the swap"
            },
            "functionSelector": "9d453f8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapWithUniV3",
            "nameLocation": "3728:13:39",
            "parameters": {
              "id": 28481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28472,
                  "mutability": "mutable",
                  "name": "swapData",
                  "nameLocation": "3764:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28632,
                  "src": "3751:21:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28471,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28474,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3790:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28632,
                  "src": "3782:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3782:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28477,
                  "mutability": "mutable",
                  "name": "assetIn",
                  "nameLocation": "3814:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28632,
                  "src": "3808:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$27180",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 28476,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28475,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27180,
                      "src": "3808:5:39"
                    },
                    "referencedDeclaration": 27180,
                    "src": "3808:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$27180",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28480,
                  "mutability": "mutable",
                  "name": "assetOut",
                  "nameLocation": "3837:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28632,
                  "src": "3831:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$27180",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 28479,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28478,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27180,
                      "src": "3831:5:39"
                    },
                    "referencedDeclaration": 27180,
                    "src": "3831:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$27180",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3741:110:39"
            },
            "returnParameters": {
              "id": 28484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28483,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3876:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 28632,
                  "src": "3868:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3867:19:39"
            },
            "scope": 28633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SwapRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28368,
          "nodeType": "StructuredDocumentation",
          "src": "295:268:39",
          "text": " @title Sommelier Swap Router\n @notice Provides a universal interface allowing Sommelier contracts to interact with multiple\n         different exchanges to perform swaps.\n @dev Perform multiple swaps using Multicall.\n @author crispymangoes, Brian Le"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28633
        ],
        "name": "SwapRouter",
        "nameLocation": "573:10:39",
        "scope": 28634,
        "usedErrors": [
          28390,
          28397,
          28404
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 39
}